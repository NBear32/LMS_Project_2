{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\React\\\\lms_app\\\\src\\\\Components\\\\LMS\\\\LectureList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from \"react\";\nimport { getGenre, getMoviesNowPlaying, getMoviesPopular, getMoviesTopRated, getMoviesUpcoming, setGenreListOfMovie, IMG_PATH } from \"./api\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LMSContext, LMSWrapper } from \"./LMSWrapper\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 10px;\n`;\n_c = Container;\nconst Card = styled.div`\n    width: 100%;\n    border: 1px solid dodgerblue;\n    cursor: pointer;\n`;\n_c2 = Card;\nconst Img = styled.img`\n    width: 100%;\n`;\n_c3 = Img;\nconst Text = styled.div``;\n_c4 = Text;\nconst Tab = styled.div`\n    display: flex;\n    margin: 10px 0;\n`;\n_c5 = Tab;\nconst Button = styled.button`\n    width: 150px;\n    height: 40px;\n    //background-color: dodgerblue;\n    background-color: ${props => props.className === \"selected\" ? \"green\" : \"dodgerblue\"};\n    border: none;\n    color: white;\n    padding: 5px 15px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 1.1rem;\n    margin: 4px 2px;\n    cursor: pointer;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n    // 마위스 위에\n    &:hover {\n        background-color: blue;\n    }\n    // 마우스 클릭시\n    &:active {\n        background-color: darkblue;\n    }\n    // 클래스 active 이면 this.active\n    &.active {\n        background-color: green;\n    }\n`;\n_c6 = Button;\nexport function LectureList() {\n  _s();\n  const [data, setData] = useState(null);\n  // const [category, setCategory] = useState(0); => 부모, 즉 LMSWrapper 로 이동시킴\n\n  const {\n    category,\n    setCategory\n  } = useContext(LMSContext); // 부모, 즉 LMSWrapper 에서 생성한 LMSContext 에서 꺼내서 사용\n\n  // useNavigage 후크는 url 주소를 매개변수로 갖는 페이지 변경 함수를 리턴함!\n  const navigate = useNavigate();\n  useEffect(() => {\n    setGenreListOfMovie();\n    getMovies(category);\n  }, []);\n\n  // useEffect(() => {\n  //     getMovies(\"N\");\n  //     setSelectedButton(\"N\");\n  // }, []);\n\n  async function getMovies(index) {\n    try {\n      setCategory(index);\n      const response = await categories[index].func();\n      console.log(response.data);\n      setData(response.data);\n    } catch (error) {\n      console.log(\"Error\", error);\n    }\n  }\n\n  // async function getMovies(type) {\n  //     try {\n  //         let response;\n  //         switch (type) {\n  //             case \"N\":\n  //                 response = await getMoviesNowPlaying();\n  //                 break;\n  //             case \"P\":\n  //                 response = await getMoviesPopular();\n  //                 break;\n  //             case \"T\":\n  //                 response = await getMoviesTopRated();\n  //                 break;\n  //             case \"U\":\n  //                 response = await getMoviesUpcoming();\n  //                 break;\n  //             default:\n  //                 response = await getMoviesNowPlaying();\n  //                 break;\n  //         }\n\n  //         console.log(response.data);\n\n  //         setData(response.data);\n  //     } catch (error) {\n  //         console.log(\"Error\", error);\n  //     }\n  // }\n\n  const categories = [{\n    category: \"전체\",\n    func: getMoviesNowPlaying\n  }, {\n    category: \"유료윬\",\n    func: getMoviesPopular\n  }, {\n    category: \"Top Rated\",\n    func: getMoviesTopRated\n  }, {\n    category: \"Upcoming\",\n    func: getMoviesUpcoming\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lecture List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tab, {\n      children:\n      // {} 는 return 들어가야 되고, 아니면 ()\n      categories.map((c, i) => /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => getMovies(i),\n        className: i == category ? \"active\" : \"\",\n        children: c.category\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: data && data.results.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n        onClick: () => {\n          navigate(`${movie.id}`);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Img, {\n          src: IMG_PATH + movie.poster_path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"\\uD0C0\\uC774\\uD2C0 : \", movie.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"\\uC7A5\\uB974 : \", getGenre(movie.genre_ids)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"\\uC18C\\uAC1C\\uAE00 : \", movie.overview]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(LectureList, \"8no4zJwL+dxTq/lAMszZXX3+pBs=\", false, function () {\n  return [useNavigate];\n});\n_c7 = LectureList;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"Img\");\n$RefreshReg$(_c4, \"Text\");\n$RefreshReg$(_c5, \"Tab\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"LectureList\");","map":{"version":3,"names":["useState","useEffect","useContext","getGenre","getMoviesNowPlaying","getMoviesPopular","getMoviesTopRated","getMoviesUpcoming","setGenreListOfMovie","IMG_PATH","styled","useNavigate","LMSContext","LMSWrapper","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Card","_c2","Img","img","_c3","Text","_c4","Tab","_c5","Button","button","props","className","_c6","LectureList","_s","data","setData","category","setCategory","navigate","getMovies","index","response","categories","func","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","c","i","onClick","results","movie","id","src","poster_path","title","genre_ids","overview","_c7","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/React/lms_app/src/Components/LMS/LectureList.js"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport {\n    getGenre,\n    getMoviesNowPlaying,\n    getMoviesPopular,\n    getMoviesTopRated,\n    getMoviesUpcoming,\n    setGenreListOfMovie,\n    IMG_PATH,\n} from \"./api\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LMSContext, LMSWrapper } from \"./LMSWrapper\";\n\nconst Container = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 10px;\n`;\n\nconst Card = styled.div`\n    width: 100%;\n    border: 1px solid dodgerblue;\n    cursor: pointer;\n`;\n\nconst Img = styled.img`\n    width: 100%;\n`;\n\nconst Text = styled.div``;\n\nconst Tab = styled.div`\n    display: flex;\n    margin: 10px 0;\n`;\n\nconst Button = styled.button`\n    width: 150px;\n    height: 40px;\n    //background-color: dodgerblue;\n    background-color: ${(props) =>\n        props.className === \"selected\" ? \"green\" : \"dodgerblue\"};\n    border: none;\n    color: white;\n    padding: 5px 15px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 1.1rem;\n    margin: 4px 2px;\n    cursor: pointer;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n    // 마위스 위에\n    &:hover {\n        background-color: blue;\n    }\n    // 마우스 클릭시\n    &:active {\n        background-color: darkblue;\n    }\n    // 클래스 active 이면 this.active\n    &.active {\n        background-color: green;\n    }\n`;\n\nexport function LectureList() {\n    const [data, setData] = useState(null);\n    // const [category, setCategory] = useState(0); => 부모, 즉 LMSWrapper 로 이동시킴\n\n    const { category, setCategory } = useContext(LMSContext); // 부모, 즉 LMSWrapper 에서 생성한 LMSContext 에서 꺼내서 사용\n\n    // useNavigage 후크는 url 주소를 매개변수로 갖는 페이지 변경 함수를 리턴함!\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        setGenreListOfMovie();\n        getMovies(category);\n    }, []);\n\n    // useEffect(() => {\n    //     getMovies(\"N\");\n    //     setSelectedButton(\"N\");\n    // }, []);\n\n    async function getMovies(index) {\n        try {\n            setCategory(index);\n            const response = await categories[index].func();\n            console.log(response.data);\n            setData(response.data);\n        } catch (error) {\n            console.log(\"Error\", error);\n        }\n    }\n\n    // async function getMovies(type) {\n    //     try {\n    //         let response;\n    //         switch (type) {\n    //             case \"N\":\n    //                 response = await getMoviesNowPlaying();\n    //                 break;\n    //             case \"P\":\n    //                 response = await getMoviesPopular();\n    //                 break;\n    //             case \"T\":\n    //                 response = await getMoviesTopRated();\n    //                 break;\n    //             case \"U\":\n    //                 response = await getMoviesUpcoming();\n    //                 break;\n    //             default:\n    //                 response = await getMoviesNowPlaying();\n    //                 break;\n    //         }\n\n    //         console.log(response.data);\n\n    //         setData(response.data);\n    //     } catch (error) {\n    //         console.log(\"Error\", error);\n    //     }\n    // }\n\n    const categories = [\n        { category: \"전체\", func: getMoviesNowPlaying },\n        { category: \"유료윬\", func: getMoviesPopular },\n        { category: \"Top Rated\", func: getMoviesTopRated },\n        { category: \"Upcoming\", func: getMoviesUpcoming },\n    ];\n\n    return (\n        <>\n            <h1>Lecture List</h1>\n            <Tab>\n                {\n                    // {} 는 return 들어가야 되고, 아니면 ()\n                    categories.map((c, i) => (\n                        <Button\n                            key={i}\n                            onClick={() => getMovies(i)}\n                            className={i == category ? \"active\" : \"\"}\n                        >\n                            {c.category}\n                        </Button>\n                    ))\n                }\n            </Tab>\n            <Container>\n                {data &&\n                    data.results.map((movie) => (\n                        <Card\n                            key={movie.id}\n                            onClick={() => {\n                                navigate(`${movie.id}`);\n                            }}\n                        >\n                            <Img src={IMG_PATH + movie.poster_path}></Img>\n                            <Text>타이틀 : {movie.title}</Text>\n                            <Text>장르 : {getGenre(movie.genre_ids)}</Text>\n                            <Text>소개글 : {movie.overview}</Text>\n                        </Card>\n                    ))}\n            </Container>\n        </>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}