{"ast":null,"code":"import axios from \"axios\";\nconst headers = {\n  headers: {\n    accept: \"appplication/json\",\n    Authorization: \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlY2NkOTBlY2Y1NTU2ZmQxOTRlN2IxOTc1NDA2MjQ5NSIsIm5iZiI6MTcyMTg4MzA5Ni4xNzA4NzcsInN1YiI6IjY2YTFjYWUzYzhiYmEzMTJlMzcyY2Y5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fkE0U7_iqbBmAomAP88d8zeaugpk369fcjfFSSGOCFU\"\n  }\n};\nexport const IMG_PATH = \"https://image.tmdb.org/t/p/original\";\nexport function getMoviesNowPlaying() {\n  return axios.get(\"https://api.themoviedb.org/3/movie/now_playing?language=ko-KR&page=1\", headers);\n}\nexport function getMoviesPopular() {\n  return axios.get(\"https://api.themoviedb.org/3/movie/popular?language=ko-KR&page=1\", headers);\n}\nexport function getMoviesTopRated() {\n  return axios.get(\"https://api.themoviedb.org/3/movie/top_rated?language=ko-KR&page=1\", headers);\n}\nexport function getMoviesUpcoming() {\n  return axios.get(\"https://api.themoviedb.org/3/movie/upcoming?language=ko-KR&page=1\", headers);\n}\nexport function getMovieDetailById(id) {\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}?language=ko-KR`, headers);\n}\nexport function getMovieCreditById(id) {\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?language=ko-KR`, headers);\n}\nexport let genre = [];\n\n// export const genre = [\n//     {\n//         id: 28,\n//         name: \"Action\",\n//     },\n//     {\n//         id: 12,\n//         name: \"Adventure\",\n//     },\n//     {\n//         id: 16,\n//         name: \"Animation\",\n//     },\n//     {\n//         id: 35,\n//         name: \"Comedy\",\n//     },\n//     {\n//         id: 80,\n//         name: \"Crime\",\n//     },\n//     {\n//         id: 99,\n//         name: \"Documentary\",\n//     },\n//     {\n//         id: 18,\n//         name: \"Drama\",\n//     },\n//     {\n//         id: 10751,\n//         name: \"Family\",\n//     },\n//     {\n//         id: 14,\n//         name: \"Fantasy\",\n//     },\n//     {\n//         id: 36,\n//         name: \"History\",\n//     },\n//     {\n//         id: 27,\n//         name: \"Horror\",\n//     },\n//     {\n//         id: 10402,\n//         name: \"Music\",\n//     },\n//     {\n//         id: 9648,\n//         name: \"Mystery\",\n//     },\n//     {\n//         id: 10749,\n//         name: \"Romance\",\n//     },\n//     {\n//         id: 878,\n//         name: \"Science Fiction\",\n//     },\n//     {\n//         id: 10770,\n//         name: \"TV Movie\",\n//     },\n//     {\n//         id: 53,\n//         name: \"Thriller\",\n//     },\n//     {\n//         id: 10752,\n//         name: \"War\",\n//     },\n//     {\n//         id: 37,\n//         name: \"Western\",\n//     },\n// ];\n\nexport async function setGenreListOfMovie() {\n  // 로컬스토리지에 장르리스트가 있으면 그걸 사용\n  genre = JSON.parse(localStorage.getItem(\"MovieGenreList\"));\n\n  // 없으면 api로 받아와서 로컬스토리지에 저장하고 사용\n  if (!genre) {\n    try {\n      const response = await axios.get(\"https://api.themoviedb.org/3/genre/movie/list?language=ko-KR\", headers);\n      genre = response.data.genres;\n      localStorage.setItem(\"MovieGenreList\", JSON.stringify(genre));\n    } catch (error) {\n      console.log(\"Error\", error);\n    }\n  }\n}\n\n// list 는 장르의 숫자만 담겨 있음\nexport function getGenre(list) {\n  return list.map(id => {\n    const temp = genre.find();\n  });\n  let str = \"\";\n  list.forEach(a => {\n    const temp = genre.find(g => g.id == a);\n    str = str + \" \" + temp.name;\n  });\n  return str;\n}","map":{"version":3,"names":["axios","headers","accept","Authorization","IMG_PATH","getMoviesNowPlaying","get","getMoviesPopular","getMoviesTopRated","getMoviesUpcoming","getMovieDetailById","id","getMovieCreditById","genre","setGenreListOfMovie","JSON","parse","localStorage","getItem","response","data","genres","setItem","stringify","error","console","log","getGenre","list","map","temp","find","str","forEach","a","g","name"],"sources":["C:/Users/admin/Documents/GitHub/React/my_app/src/Components/240725/MovieShop/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst headers = {\r\n    headers: {\r\n        accept: \"appplication/json\",\r\n        Authorization:\r\n            \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlY2NkOTBlY2Y1NTU2ZmQxOTRlN2IxOTc1NDA2MjQ5NSIsIm5iZiI6MTcyMTg4MzA5Ni4xNzA4NzcsInN1YiI6IjY2YTFjYWUzYzhiYmEzMTJlMzcyY2Y5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fkE0U7_iqbBmAomAP88d8zeaugpk369fcjfFSSGOCFU\",\r\n    },\r\n};\r\n\r\nexport const IMG_PATH = \"https://image.tmdb.org/t/p/original\";\r\n\r\nexport function getMoviesNowPlaying() {\r\n    return axios.get(\r\n        \"https://api.themoviedb.org/3/movie/now_playing?language=ko-KR&page=1\",\r\n        headers\r\n    );\r\n}\r\n\r\nexport function getMoviesPopular() {\r\n    return axios.get(\r\n        \"https://api.themoviedb.org/3/movie/popular?language=ko-KR&page=1\",\r\n        headers\r\n    );\r\n}\r\n\r\nexport function getMoviesTopRated() {\r\n    return axios.get(\r\n        \"https://api.themoviedb.org/3/movie/top_rated?language=ko-KR&page=1\",\r\n        headers\r\n    );\r\n}\r\n\r\nexport function getMoviesUpcoming() {\r\n    return axios.get(\r\n        \"https://api.themoviedb.org/3/movie/upcoming?language=ko-KR&page=1\",\r\n        headers\r\n    );\r\n}\r\n\r\nexport function getMovieDetailById(id) {\r\n    return axios.get(\r\n        `https://api.themoviedb.org/3/movie/${id}?language=ko-KR`,\r\n        headers\r\n    );\r\n}\r\n\r\nexport function getMovieCreditById(id) {\r\n    return axios.get(\r\n        `https://api.themoviedb.org/3/movie/${id}/credits?language=ko-KR`,\r\n        headers\r\n    );\r\n}\r\n\r\nexport let genre = [];\r\n\r\n// export const genre = [\r\n//     {\r\n//         id: 28,\r\n//         name: \"Action\",\r\n//     },\r\n//     {\r\n//         id: 12,\r\n//         name: \"Adventure\",\r\n//     },\r\n//     {\r\n//         id: 16,\r\n//         name: \"Animation\",\r\n//     },\r\n//     {\r\n//         id: 35,\r\n//         name: \"Comedy\",\r\n//     },\r\n//     {\r\n//         id: 80,\r\n//         name: \"Crime\",\r\n//     },\r\n//     {\r\n//         id: 99,\r\n//         name: \"Documentary\",\r\n//     },\r\n//     {\r\n//         id: 18,\r\n//         name: \"Drama\",\r\n//     },\r\n//     {\r\n//         id: 10751,\r\n//         name: \"Family\",\r\n//     },\r\n//     {\r\n//         id: 14,\r\n//         name: \"Fantasy\",\r\n//     },\r\n//     {\r\n//         id: 36,\r\n//         name: \"History\",\r\n//     },\r\n//     {\r\n//         id: 27,\r\n//         name: \"Horror\",\r\n//     },\r\n//     {\r\n//         id: 10402,\r\n//         name: \"Music\",\r\n//     },\r\n//     {\r\n//         id: 9648,\r\n//         name: \"Mystery\",\r\n//     },\r\n//     {\r\n//         id: 10749,\r\n//         name: \"Romance\",\r\n//     },\r\n//     {\r\n//         id: 878,\r\n//         name: \"Science Fiction\",\r\n//     },\r\n//     {\r\n//         id: 10770,\r\n//         name: \"TV Movie\",\r\n//     },\r\n//     {\r\n//         id: 53,\r\n//         name: \"Thriller\",\r\n//     },\r\n//     {\r\n//         id: 10752,\r\n//         name: \"War\",\r\n//     },\r\n//     {\r\n//         id: 37,\r\n//         name: \"Western\",\r\n//     },\r\n// ];\r\n\r\nexport async function setGenreListOfMovie() {\r\n    // 로컬스토리지에 장르리스트가 있으면 그걸 사용\r\n    genre = JSON.parse(localStorage.getItem(\"MovieGenreList\"));\r\n\r\n    // 없으면 api로 받아와서 로컬스토리지에 저장하고 사용\r\n    if (!genre) {\r\n        try {\r\n            const response = await axios.get(\r\n                \"https://api.themoviedb.org/3/genre/movie/list?language=ko-KR\",\r\n                headers\r\n            );\r\n            genre = response.data.genres;\r\n            localStorage.setItem(\"MovieGenreList\", JSON.stringify(genre));\r\n        } catch (error) {\r\n            console.log(\"Error\", error);\r\n        }\r\n    }\r\n}\r\n\r\n// list 는 장르의 숫자만 담겨 있음\r\nexport function getGenre(list) {\r\n    return list.map((id) => {\r\n        const temp = genre.find()\r\n    })\r\n\r\n\r\n\r\n\r\n    let str = \"\";\r\n    list.forEach((a) => {\r\n        const temp = genre.find((g) => g.id == a);\r\n        str = str + \" \" + temp.name;\r\n    });\r\n    return str;\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG;EACZA,OAAO,EAAE;IACLC,MAAM,EAAE,mBAAmB;IAC3BC,aAAa,EACT;EACR;AACJ,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,qCAAqC;AAE7D,OAAO,SAASC,mBAAmBA,CAAA,EAAG;EAClC,OAAOL,KAAK,CAACM,GAAG,CACZ,sEAAsE,EACtEL,OACJ,CAAC;AACL;AAEA,OAAO,SAASM,gBAAgBA,CAAA,EAAG;EAC/B,OAAOP,KAAK,CAACM,GAAG,CACZ,kEAAkE,EAClEL,OACJ,CAAC;AACL;AAEA,OAAO,SAASO,iBAAiBA,CAAA,EAAG;EAChC,OAAOR,KAAK,CAACM,GAAG,CACZ,oEAAoE,EACpEL,OACJ,CAAC;AACL;AAEA,OAAO,SAASQ,iBAAiBA,CAAA,EAAG;EAChC,OAAOT,KAAK,CAACM,GAAG,CACZ,mEAAmE,EACnEL,OACJ,CAAC;AACL;AAEA,OAAO,SAASS,kBAAkBA,CAACC,EAAE,EAAE;EACnC,OAAOX,KAAK,CAACM,GAAG,CACZ,sCAAsCK,EAAE,iBAAiB,EACzDV,OACJ,CAAC;AACL;AAEA,OAAO,SAASW,kBAAkBA,CAACD,EAAE,EAAE;EACnC,OAAOX,KAAK,CAACM,GAAG,CACZ,sCAAsCK,EAAE,yBAAyB,EACjEV,OACJ,CAAC;AACL;AAEA,OAAO,IAAIY,KAAK,GAAG,EAAE;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeC,mBAAmBA,CAAA,EAAG;EACxC;EACAD,KAAK,GAAGE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC;;EAE1D;EACA,IAAI,CAACL,KAAK,EAAE;IACR,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMnB,KAAK,CAACM,GAAG,CAC5B,8DAA8D,EAC9DL,OACJ,CAAC;MACDY,KAAK,GAAGM,QAAQ,CAACC,IAAI,CAACC,MAAM;MAC5BJ,YAAY,CAACK,OAAO,CAAC,gBAAgB,EAAEP,IAAI,CAACQ,SAAS,CAACV,KAAK,CAAC,CAAC;IACjE,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC/B;EACJ;AACJ;;AAEA;AACA,OAAO,SAASG,QAAQA,CAACC,IAAI,EAAE;EAC3B,OAAOA,IAAI,CAACC,GAAG,CAAElB,EAAE,IAAK;IACpB,MAAMmB,IAAI,GAAGjB,KAAK,CAACkB,IAAI,CAAC,CAAC;EAC7B,CAAC,CAAC;EAKF,IAAIC,GAAG,GAAG,EAAE;EACZJ,IAAI,CAACK,OAAO,CAAEC,CAAC,IAAK;IAChB,MAAMJ,IAAI,GAAGjB,KAAK,CAACkB,IAAI,CAAEI,CAAC,IAAKA,CAAC,CAACxB,EAAE,IAAIuB,CAAC,CAAC;IACzCF,GAAG,GAAGA,GAAG,GAAG,GAAG,GAAGF,IAAI,CAACM,IAAI;EAC/B,CAAC,CAAC;EACF,OAAOJ,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}