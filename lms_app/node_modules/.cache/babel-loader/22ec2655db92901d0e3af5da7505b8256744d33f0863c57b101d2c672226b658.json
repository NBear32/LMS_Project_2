{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\React\\\\lms_app\\\\src\\\\Components\\\\LMS\\\\Search\\\\Search.js\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { IMG_PATH } from \"../../api\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { searchMoviesByKeyword, getGenre } from \"./api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchBox = styled.div``;\n_c = SearchBox;\nconst Input = styled.input`\n    width: 500px;\n    margin-right: 5px;\n`;\n_c2 = Input;\nconst Container = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 10px;\n    margin-top: 20px;\n    margin-bottom: 50px;\n`;\n_c3 = Container;\nconst Card = styled.div`\n    width: 100%;\n    border: 1px solid dodgerblue;\n    cursor: pointer;\n    padding: 10px;\n`;\n_c4 = Card;\nconst Img = styled.img`\n    width: 100%;\n`;\n_c5 = Img;\nconst Text = styled.div`\n    color: #333;\n    margin: 2px 0;\n`;\n_c6 = Text;\nexport function Search() {\n  _s();\n  const [data, setData] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const navigate = useNavigate(); // url 변경시키는 함수\n\n  const location = useLocation();\n  const keyword = new URLSearchParams(location.search).get(\"keyword\"); // keyword => inputValue\n\n  // 키워드가 없으면, 예전 검색이 다시 뜨지 않도록 초기화\n  useEffect(() => {\n    if (keyword) {\n      searchMovies();\n    } else {\n      setData(null);\n    }\n  }, [keyword]);\n  async function searchMovies(keyword) {\n    try {\n      const response = await searchMoviesByKeyword(keyword);\n      console.log(response.data);\n      setData(response.data);\n    } catch (error) {\n      console.log(\"Error\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC0C1\\uC138\\uC870\\uD68C \\uD398\\uC774\\uC9C0 \\uC785\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        // inputValue 를 url [/search?] 뒤에 붙여 api 전달 예정 [/search?keyword=batman]\n        onClick: () => {\n          navigate(`?query=${inputValue}`); // requestParam\n          searchMovies(inputValue);\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: keyword ? `\"${keyword}\" 로 검색한 결과 ` : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: data && data.results.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n        onClick: () => {\n          navigate(`/movie/${movie.id}`);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Img, {\n          src: IMG_PATH + movie.poster_path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"\\uD0C0\\uC774\\uD2C0 : \", movie.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"\\uC7A5\\uB974 : \", getGenre(movie.genre_ids), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Search, \"ztI9QLDkexUYLksJQW9pL0mJY+Q=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c7 = Search;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"SearchBox\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Card\");\n$RefreshReg$(_c5, \"Img\");\n$RefreshReg$(_c6, \"Text\");\n$RefreshReg$(_c7, \"Search\");","map":{"version":3,"names":["styled","useState","useEffect","IMG_PATH","useNavigate","useLocation","searchMoviesByKeyword","getGenre","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchBox","div","_c","Input","input","_c2","Container","_c3","Card","_c4","Img","img","_c5","Text","_c6","Search","_s","data","setData","inputValue","setInputValue","navigate","location","keyword","URLSearchParams","search","get","searchMovies","response","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","results","map","movie","id","src","poster_path","title","genre_ids","overview","_c7","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/React/lms_app/src/Components/LMS/Search/Search.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { IMG_PATH } from \"../../api\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { searchMoviesByKeyword, getGenre } from \"./api\";\n\nconst SearchBox = styled.div``;\n\nconst Input = styled.input`\n    width: 500px;\n    margin-right: 5px;\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 10px;\n    margin-top: 20px;\n    margin-bottom: 50px;\n`;\n\nconst Card = styled.div`\n    width: 100%;\n    border: 1px solid dodgerblue;\n    cursor: pointer;\n    padding: 10px;\n`;\n\nconst Img = styled.img`\n    width: 100%;\n`;\n\nconst Text = styled.div`\n    color: #333;\n    margin: 2px 0;\n`;\n\nexport function Search() {\n    const [data, setData] = useState(null);\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const navigate = useNavigate(); // url 변경시키는 함수\n\n    const location = useLocation();\n    const keyword = new URLSearchParams(location.search).get(\"keyword\"); // keyword => inputValue\n\n    // 키워드가 없으면, 예전 검색이 다시 뜨지 않도록 초기화\n    useEffect(() => {\n        if (keyword) {\n            searchMovies();\n        } else {\n            setData(null);\n        }\n    }, [keyword]);\n\n    async function searchMovies(keyword) {\n        try {\n            const response = await searchMoviesByKeyword(keyword);\n            console.log(response.data);\n            setData(response.data);\n        } catch (error) {\n            console.log(\"Error\", error);\n        }\n    }\n\n    return (\n        <>\n            <SearchBox>\n                <h1>상세조회 페이지 입니다.</h1>\n                <Input\n                    placeholder=\"검색어를 입력해주세요\"\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                />\n                <button\n                    // inputValue 를 url [/search?] 뒤에 붙여 api 전달 예정 [/search?keyword=batman]\n                    onClick={() => {\n                        navigate(`?query=${inputValue}`); // requestParam\n                        searchMovies(inputValue);\n                    }}\n                >\n                    Search\n                </button>\n            </SearchBox>\n            {/* // keyword 가 있으면 keyword, 없으면 null */}\n            <h3>{keyword ? `\"${keyword}\" 로 검색한 결과 ` : null}</h3>\n            <Container>\n                {data &&\n                    data.results.map((movie) => (\n                        <Card\n                            key={movie.id}\n                            onClick={() => {\n                                navigate(`/movie/${movie.id}`);\n                            }}\n                        >\n                            {/* <Img src={IMG_PATH + movie.backdrop_path}></Img> */}\n                            <Img src={IMG_PATH + movie.poster_path}></Img>\n                            <Text>\n                                <b>타이틀 : {movie.title} </b>\n                            </Text>\n                            <Text>\n                                <b>장르 : {getGenre(movie.genre_ids)} </b>\n                            </Text>\n                            <hr />\n                            <Text>{movie.overview}</Text>\n                        </Card>\n                    ))}\n            </Container>\n        </>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}