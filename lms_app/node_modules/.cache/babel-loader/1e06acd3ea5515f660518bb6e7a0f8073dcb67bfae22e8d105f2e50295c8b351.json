{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\",\n  withCredentials: true\n});\n\n// Course_History\nexport async function getAllCourseHistory() {\n  try {\n    const response = await api.get(\"/course/history\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error getAllCourseHistory:\", error);\n  }\n}\n\n// Course_Registration\nexport async function deleteCourseRegistration(userId, lectureId) {\n  try {\n    await api.delete(`/course/delCourseRegistration/${userId}/${lectureId}`);\n  } catch (error) {\n    console.error(\"Error deleteCourseRegistration:\", error);\n  }\n}\nexport async function getAllRegistration() {\n  try {\n    const response = await api.get(\"/course/registration\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error getAllRegistration:\", error);\n    throw error;\n  }\n}\nexport async function getLectureStatusCountJPQL(userId) {\n  try {\n    const response = await api.get(`/course/lectureStatusCount/id/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error getLectureStatusCountJPQL:\", error);\n    throw error;\n  }\n}\nexport async function saveCourseRegistration(courseRegistration) {\n  try {\n    const response = await api.post(\"/course/saveCourseRegistration\", courseRegistration);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error saveCourseRegistration:\", error);\n    throw error;\n  }\n}\n\n// export async function getCourseEnrollCountQueryJPQL() {\n//   try {\n//     const response = await api.get(\"/course/queryCECJPQL/\");\n//     return response.data; // 응답 데이터 반환\n//   } catch (error) {\n//     console.error(\"Error getCourseEnrollCountQueryJPQL:\", error);\n//     throw error;\n//   }\n// }\n\n// export async function getCourseEnrollCountQueryJPQL(lectureName) {\n//   try {\n//     const response = await api.get(`/course/queryCECJPQL/${lectureName}`);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error getCourseEnrollCountQueryJPQL:\", error);\n//     throw error;\n//   }\n// }\n\n// export async function getCourseLectureCountQueryJPQL() {\n//   try {\n//     const response = await api.get(\"/course/queryCLCJPQL/\");\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error getCourseLectureCountQueryJPQL:\", error);\n//     throw error;\n//   }\n// }\n\n// export async function getCourseLectureCountQueryJPQL(userName) {\n//   try {\n//     const response = await api.get(`/course/queryCLCJPQL/${userName}`);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error getCourseLectureCountQueryJPQL:\", error);\n//     throw error;\n//   }\n// }","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","getAllCourseHistory","response","get","data","error","console","deleteCourseRegistration","userId","lectureId","delete","getAllRegistration","getLectureStatusCountJPQL","saveCourseRegistration","courseRegistration","post"],"sources":["C:/Users/User/Documents/GitHub/lms_app/src/Api/CourseApi/CourseApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:8080\",\r\n  withCredentials: true,\r\n});\r\n\r\n// Course_History\r\nexport async function getAllCourseHistory() {\r\n  try {\r\n    const response = await api.get(\"/course/history\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error getAllCourseHistory:\", error);\r\n  }\r\n}\r\n\r\n// Course_Registration\r\nexport async function deleteCourseRegistration(userId, lectureId) {\r\n  try {\r\n    await api.delete(`/course/delCourseRegistration/${userId}/${lectureId}`);\r\n  } catch (error) {\r\n    console.error(\"Error deleteCourseRegistration:\", error);\r\n  }\r\n}\r\n\r\nexport async function getAllRegistration() {\r\n  try {\r\n    const response = await api.get(\"/course/registration\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error getAllRegistration:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getLectureStatusCountJPQL(userId) {\r\n  try {\r\n    const response = await api.get(`/course/lectureStatusCount/id/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error getLectureStatusCountJPQL:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function saveCourseRegistration(courseRegistration) {\r\n  try {\r\n    const response = await api.post(\r\n      \"/course/saveCourseRegistration\",\r\n      courseRegistration\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error saveCourseRegistration:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// export async function getCourseEnrollCountQueryJPQL() {\r\n//   try {\r\n//     const response = await api.get(\"/course/queryCECJPQL/\");\r\n//     return response.data; // 응답 데이터 반환\r\n//   } catch (error) {\r\n//     console.error(\"Error getCourseEnrollCountQueryJPQL:\", error);\r\n//     throw error;\r\n//   }\r\n// }\r\n\r\n// export async function getCourseEnrollCountQueryJPQL(lectureName) {\r\n//   try {\r\n//     const response = await api.get(`/course/queryCECJPQL/${lectureName}`);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error getCourseEnrollCountQueryJPQL:\", error);\r\n//     throw error;\r\n//   }\r\n// }\r\n\r\n// export async function getCourseLectureCountQueryJPQL() {\r\n//   try {\r\n//     const response = await api.get(\"/course/queryCLCJPQL/\");\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error getCourseLectureCountQueryJPQL:\", error);\r\n//     throw error;\r\n//   }\r\n// }\r\n\r\n// export async function getCourseLectureCountQueryJPQL(userName) {\r\n//   try {\r\n//     const response = await api.get(`/course/queryCLCJPQL/${userName}`);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error getCourseLectureCountQueryJPQL:\", error);\r\n//     throw error;\r\n//   }\r\n// }\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACA,OAAO,eAAeC,mBAAmBA,CAAA,EAAG;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,iBAAiB,CAAC;IACjD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACpD;AACF;;AAEA;AACA,OAAO,eAAeE,wBAAwBA,CAACC,MAAM,EAAEC,SAAS,EAAE;EAChE,IAAI;IACF,MAAMZ,GAAG,CAACa,MAAM,CAAC,iCAAiCF,MAAM,IAAIC,SAAS,EAAE,CAAC;EAC1E,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;EACzD;AACF;AAEA,OAAO,eAAeM,kBAAkBA,CAAA,EAAG;EACzC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,sBAAsB,CAAC;IACtD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeO,yBAAyBA,CAACJ,MAAM,EAAE;EACtD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,iCAAiCK,MAAM,EAAE,CAAC;IACzE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeQ,sBAAsBA,CAACC,kBAAkB,EAAE;EAC/D,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAML,GAAG,CAACkB,IAAI,CAC7B,gCAAgC,EAChCD,kBACF,CAAC;IACD,OAAOZ,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}