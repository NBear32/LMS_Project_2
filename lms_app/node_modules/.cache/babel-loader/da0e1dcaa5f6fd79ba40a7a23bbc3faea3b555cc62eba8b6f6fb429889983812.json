{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\lms_app\\\\src\\\\Components\\\\Unity\\\\UnityProject.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport { ModalNotices } from \"../LMS/Community/ModalNotices.js\";\nimport { LectureList } from \"../LMS/Lecture/LectureList.js\";\nimport { UserManagement } from \"../LMS/Admin/UserManagement.js\";\nimport axios from \"axios\";\n\n// 게임을 로드할 화면을 만듬\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    width: 1344px;\n    height: 756px;\n    margin: auto;\n    border: 1px solid gray;\n`;\n_c = Container;\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"1200px\",\n    // 모달의 너비를 설정합니다.\n    height: \"800px\",\n    // 모달의 높이를 설정합니다.\n    padding: \"20px\",\n    borderRadius: \"10px\"\n  },\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\" // 오버레이의 배경색을 설정합니다.\n  }\n};\nexport function UnityProject() {\n  _s();\n  const [playingGame, setPlayingGame] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [userName, setUserName] = useState();\n  const [score, setScore] = useState();\n  const [modalOpen, setModalOpen] = useState(false);\n  const modalBackground = useRef();\n  const [modalReturn, setModalReturn] = useState(null);\n\n  // React 에서 Unity 로 sendMessage 를 통해 전달하기\n  const {\n    unityProvider,\n    sendMessage,\n    addEventListener,\n    removeEventListener\n  } = useUnityContext({\n    loaderUrl: \"build/Build.loader.js\",\n    dataUrl: \"build/Build.data\",\n    frameworkUrl: \"build/Build.framework.js\",\n    codeUrl: \"build/Build.wasm\"\n  });\n\n  // Unity 에서 React 로 전달\n  function handleGameOver(userName, score) {\n    setIsGameOver(true);\n    setUserName(userName);\n    setScore(score);\n  }\n\n  // // Unity에서 호출될 JavaScript 함수\n  // function handleOpenReactWindowNotices(romeName) {\n  //     // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n  //     // React 애플리케이션의 URL로 새로운 탭을 열기\n  //     window.open(\"http://localhost:3000/community/notices\", \"_blank\");\n  // }\n\n  useEffect(() => {\n    addEventListener(\"OpenReactWindowNotices\", handleOpenReactWindowNotices);\n    return () => {\n      removeEventListener(\"OpenReactWindowNotices\", handleOpenReactWindowNotices);\n    };\n  }, []);\n\n  // Unity에서 호출될 JavaScript 함수\n  function handleOpenReactWindowNotices(romeName) {\n    // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n    // React 애플리케이션의 URL로 새로운 탭을 열기\n\n    if (romeName == \"공지사항\") {\n      window.alert(\"Modal Open 공지사항!!! 전달됨\");\n      setModalOpen(true);\n      // setModalReturn(() => ModalNotices); // React component function\n      // setModalReturn(() => UserManagement); // React component function\n      setModalReturn(() => LectureList); // React component function\n    }\n  }\n  useEffect(() => {\n    addEventListener(\"GameOver\", handleGameOver);\n    return () => {\n      removeEventListener(\"GameOver\", handleGameOver);\n    };\n  }, []);\n  function ReactToUnityJSON() {\n    // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/${lectureId}/${data.learningContentsSeq}`; // /{lectureId}/{learningContentsSeq}\n    const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/L00000000052/3`; // /{lectureId}/{learningContentsSeq}\n\n    window.alert(\"urlLectureContentQA: \" + urlLectureContentQA);\n    axios.get(urlLectureContentQA, {\n      withCredentials: true\n    }).then(response => {\n      console.log(\"데이터:\", response.data);\n      window.alert(\"response.data: \" + response.data[0].question + \"@\" + response.data[1].question + \"@\" + response.data[2].question);\n      const jsonData = JSON.stringify(response.data);\n      window.alert(\"React jsonData: \" + jsonData);\n\n      // Unity로 데이터 전송\n      // sendMessage(\"DataReceiverObject\", \"ReceiveJsonData\", jsonData);\n      // sendMessage(\"DataReceiver\", \"ReceiveJsonData\", jsonData);\n\n      window.alert(\"SendMessage Start!!!\");\n      sendMessage(\"Player\", \"ReceiveJsonData\", jsonData);\n    }).catch(error => {\n      console.log(\"에러 발생: \", error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"UnityProject Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPlayingGame(true),\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage(\"Player\", \"PauseGame\"),\n      children: \"Pause Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage(\"Player\", \"ContinueGame\"),\n      children: \"Continue Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage(\"Player\", \"Attack\"),\n      children: \"Attack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => ReactToUnityJSON(),\n      children: \"ReactToUnityJSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        ref: modalBackground,\n        onClick: e => {\n          if (e.target === modalBackground.current) {\n            setModalOpen(false);\n            sendMessage(\"Player\", \"ContinueGame\");\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modalOpen,\n          onRequestClose: () => {\n            setModalOpen(false);\n          },\n          style: customStyles // 스타일을 적용합니다.\n          ,\n          contentLabel: \"Modal Test\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: () => {\n              setModalOpen(false);\n              sendMessage(\"Player\", \"ContinueGame\");\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uB9AC\\uC561\\uD2B8\\uB85C \\uBAA8\\uB2EC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), modalReturn && /*#__PURE__*/React.createElement(modalReturn), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setModalOpen(false);\n              sendMessage(\"Player\", \"ContinueGame\");\n            },\n            children: \"\\uBAA8\\uB2EC \\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), playingGame ? /*#__PURE__*/_jsxDEV(Unity, {\n        unityProvider: unityProvider,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), isGameOver === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Game Over ${userName}! You've scored ${score} points.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(UnityProject, \"rNQCL572bQ8CuxyLtgFKLTwAzZI=\", false, function () {\n  return [useUnityContext];\n});\n_c2 = UnityProject;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"UnityProject\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Unity","useUnityContext","styled","Modal","ModalNotices","LectureList","UserManagement","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","customStyles","content","top","left","right","bottom","transform","width","height","padding","borderRadius","overlay","backgroundColor","UnityProject","_s","playingGame","setPlayingGame","isGameOver","setIsGameOver","userName","setUserName","score","setScore","modalOpen","setModalOpen","modalBackground","modalReturn","setModalReturn","unityProvider","sendMessage","addEventListener","removeEventListener","loaderUrl","dataUrl","frameworkUrl","codeUrl","handleGameOver","handleOpenReactWindowNotices","romeName","window","alert","ReactToUnityJSON","urlLectureContentQA","get","withCredentials","then","response","console","log","data","question","jsonData","JSON","stringify","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","ref","e","target","current","isOpen","onRequestClose","style","contentLabel","createElement","_c2","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/lms_app/src/Components/Unity/UnityProject.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Modal from \"react-modal\";\r\nimport { ModalNotices } from \"../LMS/Community/ModalNotices.js\";\r\n\r\nimport { LectureList } from \"../LMS/Lecture/LectureList.js\";\r\n\r\nimport { UserManagement } from \"../LMS/Admin/UserManagement.js\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// 게임을 로드할 화면을 만듬\r\nconst Container = styled.div`\r\n    width: 1344px;\r\n    height: 756px;\r\n    margin: auto;\r\n    border: 1px solid gray;\r\n`;\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        width: \"1200px\", // 모달의 너비를 설정합니다.\r\n        height: \"800px\", // 모달의 높이를 설정합니다.\r\n        padding: \"20px\",\r\n        borderRadius: \"10px\",\r\n    },\r\n    overlay: {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\", // 오버레이의 배경색을 설정합니다.\r\n    },\r\n};\r\n\r\nexport function UnityProject() {\r\n    const [playingGame, setPlayingGame] = useState(false);\r\n\r\n    const [isGameOver, setIsGameOver] = useState(false);\r\n    const [userName, setUserName] = useState();\r\n    const [score, setScore] = useState();\r\n\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const modalBackground = useRef();\r\n\r\n    const [modalReturn, setModalReturn] = useState(null);\r\n\r\n    // React 에서 Unity 로 sendMessage 를 통해 전달하기\r\n    const {\r\n        unityProvider,\r\n        sendMessage,\r\n        addEventListener,\r\n        removeEventListener,\r\n    } = useUnityContext({\r\n        loaderUrl: \"build/Build.loader.js\",\r\n        dataUrl: \"build/Build.data\",\r\n        frameworkUrl: \"build/Build.framework.js\",\r\n        codeUrl: \"build/Build.wasm\",\r\n    });\r\n\r\n    // Unity 에서 React 로 전달\r\n    function handleGameOver(userName, score) {\r\n        setIsGameOver(true);\r\n        setUserName(userName);\r\n        setScore(score);\r\n    }\r\n\r\n    // // Unity에서 호출될 JavaScript 함수\r\n    // function handleOpenReactWindowNotices(romeName) {\r\n    //     // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\r\n    //     // React 애플리케이션의 URL로 새로운 탭을 열기\r\n    //     window.open(\"http://localhost:3000/community/notices\", \"_blank\");\r\n    // }\r\n\r\n    useEffect(() => {\r\n        addEventListener(\r\n            \"OpenReactWindowNotices\",\r\n            handleOpenReactWindowNotices\r\n        );\r\n        return () => {\r\n            removeEventListener(\r\n                \"OpenReactWindowNotices\",\r\n                handleOpenReactWindowNotices\r\n            );\r\n        };\r\n    }, []);\r\n\r\n    // Unity에서 호출될 JavaScript 함수\r\n    function handleOpenReactWindowNotices(romeName) {\r\n        // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\r\n        // React 애플리케이션의 URL로 새로운 탭을 열기\r\n\r\n        if (romeName == \"공지사항\") {\r\n            window.alert(\"Modal Open 공지사항!!! 전달됨\");\r\n            setModalOpen(true);\r\n            // setModalReturn(() => ModalNotices); // React component function\r\n            // setModalReturn(() => UserManagement); // React component function\r\n            setModalReturn(() => LectureList); // React component function\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        addEventListener(\"GameOver\", handleGameOver);\r\n        return () => {\r\n            removeEventListener(\"GameOver\", handleGameOver);\r\n        };\r\n    }, []);\r\n\r\n    function ReactToUnityJSON() {\r\n        // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/${lectureId}/${data.learningContentsSeq}`; // /{lectureId}/{learningContentsSeq}\r\n        const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/L00000000052/3`; // /{lectureId}/{learningContentsSeq}\r\n\r\n        window.alert(\"urlLectureContentQA: \" + urlLectureContentQA);\r\n\r\n        axios\r\n            .get(urlLectureContentQA, {\r\n                withCredentials: true,\r\n            })\r\n            .then((response) => {\r\n                console.log(\"데이터:\", response.data);\r\n                window.alert(\r\n                    \"response.data: \" +\r\n                        response.data[0].question +\r\n                        \"@\" +\r\n                        response.data[1].question +\r\n                        \"@\" +\r\n                        response.data[2].question\r\n                );\r\n\r\n                const jsonData = JSON.stringify(response.data);\r\n\r\n                window.alert(\"React jsonData: \" + jsonData);\r\n\r\n                // Unity로 데이터 전송\r\n                // sendMessage(\"DataReceiverObject\", \"ReceiveJsonData\", jsonData);\r\n                // sendMessage(\"DataReceiver\", \"ReceiveJsonData\", jsonData);\r\n\r\n                window.alert(\"SendMessage Start!!!\");\r\n\r\n                sendMessage(\"Player\", \"ReceiveJsonData\", jsonData);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"에러 발생: \", error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>UnityProject Game</h1>\r\n            <button onClick={() => setPlayingGame(true)}>Start Game</button>\r\n            <button onClick={() => sendMessage(\"Player\", \"PauseGame\")}>\r\n                Pause Game\r\n            </button>\r\n            <button onClick={() => sendMessage(\"Player\", \"ContinueGame\")}>\r\n                Continue Game\r\n            </button>\r\n\r\n            <button onClick={() => sendMessage(\"Player\", \"Attack\")}>\r\n                Attack\r\n            </button>\r\n            <button onClick={() => ReactToUnityJSON()}>ReactToUnityJSON</button>\r\n            <Container>\r\n                {/* <div className={\"btn-wrapper\"}>\r\n                    <button\r\n                        className={\"modal-open-btn\"}\r\n                        onClick={() => setModalOpen(true)}\r\n                    >\r\n                        모달 열기\r\n                    </button>\r\n                </div> */}\r\n                {modalOpen && (\r\n                    <div\r\n                        className={\"modal-container\"}\r\n                        ref={modalBackground}\r\n                        onClick={(e) => {\r\n                            if (e.target === modalBackground.current) {\r\n                                setModalOpen(false);\r\n                                sendMessage(\"Player\", \"ContinueGame\");\r\n                            }\r\n                        }}\r\n                    >\r\n                        {/* <div className={\"modal-content\"}> */}\r\n                        <Modal\r\n                            isOpen={modalOpen}\r\n                            onRequestClose={() => {\r\n                                setModalOpen(false);\r\n                            }}\r\n                            style={customStyles} // 스타일을 적용합니다.\r\n                            contentLabel=\"Modal Test\"\r\n                        >\r\n                            <span\r\n                                className=\"close\"\r\n                                onClick={() => {\r\n                                    setModalOpen(false);\r\n                                    sendMessage(\"Player\", \"ContinueGame\");\r\n                                }}\r\n                            >\r\n                                &times;\r\n                            </span>\r\n                            <h1>리액트로 모달</h1>\r\n                            {modalReturn && React.createElement(modalReturn)}\r\n                            <br></br>\r\n                            <button\r\n                                onClick={() => {\r\n                                    setModalOpen(false);\r\n                                    sendMessage(\"Player\", \"ContinueGame\");\r\n                                }}\r\n                            >\r\n                                모달 닫기\r\n                            </button>\r\n                        </Modal>\r\n                        {/* </div> */}\r\n                    </div>\r\n                )}\r\n                {playingGame ? (\r\n                    <Unity\r\n                        unityProvider={unityProvider}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                        }}\r\n                    />\r\n                ) : null}\r\n            </Container>\r\n\r\n            {/* // Unity 에서 게임오버 메시지를 받으면 출력후 종료 */}\r\n            {isGameOver === true && (\r\n                <p>{`Game Over ${userName}! You've scored ${score} points.`}</p>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}