{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\React\\\\my_app\\\\src\\\\Components\\\\240725\\\\MovieShop\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getGenre, getMoviesNowPlaying, getMoviesPopular, getMoviesTopRated, getMoviesUpcoming, IMG_PATH } from \"./api\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 10px;\n`;\n_c = Container;\nconst Card = styled.div`\n    width: 100%;\n    border: 1px solid dodgerblue;\n    cursor: pointer;\n`;\n_c2 = Card;\nconst Img = styled.img`\n    width: 100%;\n`;\n_c3 = Img;\nconst Text = styled.div``;\n_c4 = Text;\nconst Tab = styled.div`\n    display: flex;\n    margin: 10px 0;\n`;\n_c5 = Tab;\nconst Button = styled.button`\n    width: 150px;\n    height: 40px;\n    //background-color: dodgerblue;\n    background-color: ${props => props.className === \"selected\" ? \"green\" : \"dodgerblue\"};\n    border: none;\n    color: white;\n    padding: 5px 15px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 1.1rem;\n    margin: 4px 2px;\n    cursor: pointer;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n    &:hover {\n        background-color: blue;\n    }\n    &:active {\n        background-color: darkblue;\n    }\n`;\n_c6 = Button;\nexport function MovieList() {\n  _s();\n  const [data, setData] = useState(null);\n  const [selectedButton, setSelectedButton] = useState(null);\n  useEffect(() => {\n    getMovies(0);\n    setSelectedButton(\"N\");\n  }, []);\n\n  // useEffect(() => {\n  //     getMovies(\"N\");\n  //     setSelectedButton(\"N\");\n  // }, []);\n\n  async function getMovies(index) {\n    try {\n      const response = await categories[index].func();\n      console.log(response.data);\n      setData(response.data);\n    } catch (error) {\n      console.log(\"Error\", error);\n    }\n  }\n\n  // async function getMovies(type) {\n  //     try {\n  //         let response;\n  //         switch (type) {\n  //             case \"N\":\n  //                 response = await getMoviesNowPlaying();\n  //                 break;\n  //             case \"P\":\n  //                 response = await getMoviesPopular();\n  //                 break;\n  //             case \"T\":\n  //                 response = await getMoviesTopRated();\n  //                 break;\n  //             case \"U\":\n  //                 response = await getMoviesUpcoming();\n  //                 break;\n  //             default:\n  //                 response = await getMoviesNowPlaying();\n  //                 break;\n  //         }\n\n  //         console.log(response.data);\n\n  //         setData(response.data);\n  //     } catch (error) {\n  //         console.log(\"Error\", error);\n  //     }\n  // }\n\n  const handleClick = type => {\n    getMovies(type);\n    setSelectedButton(type);\n  };\n  const categories = [{\n    category: \"Now Playing\",\n    func: getMoviesNowPlaying\n  }, {\n    category: \"Popular\",\n    func: getMoviesPopular\n  }, {\n    category: \"Top Rated\",\n    func: getMoviesTopRated\n  }, {\n    category: \"Upcoming\",\n    func: getMoviesUpcoming\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tab, {\n      children:\n      // {} 는 return 들어가야 되고, 아니면 ()\n      categories.map((c, i) => /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => getMovies(i),\n        children: c.category\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: selectedButton === \"N\" ? \"selected\" : \"none\",\n      onClick: () => {\n        handleClick(\"N\");\n      },\n      children: \"Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: selectedButton === \"P\" ? \"selected\" : \"none\",\n      onClick: () => {\n        handleClick(\"P\");\n      },\n      children: \"Popular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: selectedButton === \"T\" ? \"selected\" : \"none\",\n      onClick: () => {\n        handleClick(\"T\");\n      },\n      children: \"Top Rated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: selectedButton === \"U\" ? \"selected\" : \"none\",\n      onClick: () => {\n        handleClick(\"U\");\n      },\n      children: \"Upcoming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: data && data.results.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Img, {\n          src: IMG_PATH + movie.poster_path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"\\uD0C0\\uC774\\uD2C0 : \", movie.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"\\uC7A5\\uB974 : \", getGenre(movie.genre_ids)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"\\uC18C\\uAC1C\\uAE00 : \", movie.overview]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MovieList, \"SMmnDGkVo0rLKmNAuDoZDpeV+/E=\");\n_c7 = MovieList;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"Img\");\n$RefreshReg$(_c4, \"Text\");\n$RefreshReg$(_c5, \"Tab\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"MovieList\");","map":{"version":3,"names":["useState","useEffect","getGenre","getMoviesNowPlaying","getMoviesPopular","getMoviesTopRated","getMoviesUpcoming","IMG_PATH","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Card","_c2","Img","img","_c3","Text","_c4","Tab","_c5","Button","button","props","className","_c6","MovieList","_s","data","setData","selectedButton","setSelectedButton","getMovies","index","response","categories","func","console","log","error","handleClick","type","category","children","fileName","_jsxFileName","lineNumber","columnNumber","map","c","i","onClick","results","movie","src","poster_path","title","genre_ids","overview","id","_c7","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/React/my_app/src/Components/240725/MovieShop/MovieList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n    getGenre,\n    getMoviesNowPlaying,\n    getMoviesPopular,\n    getMoviesTopRated,\n    getMoviesUpcoming,\n    IMG_PATH,\n} from \"./api\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 10px;\n`;\n\nconst Card = styled.div`\n    width: 100%;\n    border: 1px solid dodgerblue;\n    cursor: pointer;\n`;\n\nconst Img = styled.img`\n    width: 100%;\n`;\n\nconst Text = styled.div``;\n\nconst Tab = styled.div`\n    display: flex;\n    margin: 10px 0;\n`;\n\nconst Button = styled.button`\n    width: 150px;\n    height: 40px;\n    //background-color: dodgerblue;\n    background-color: ${(props) =>\n        props.className === \"selected\" ? \"green\" : \"dodgerblue\"};\n    border: none;\n    color: white;\n    padding: 5px 15px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 1.1rem;\n    margin: 4px 2px;\n    cursor: pointer;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n    &:hover {\n        background-color: blue;\n    }\n    &:active {\n        background-color: darkblue;\n    }\n`;\n\nexport function MovieList() {\n    const [data, setData] = useState(null);\n    const [selectedButton, setSelectedButton] = useState(null);\n\n    useEffect(() => {\n        getMovies(0);\n        setSelectedButton(\"N\");\n    }, []);\n\n    // useEffect(() => {\n    //     getMovies(\"N\");\n    //     setSelectedButton(\"N\");\n    // }, []);\n\n    async function getMovies(index) {\n        try {\n            const response = await categories[index].func();\n            console.log(response.data);\n            setData(response.data);\n        } catch (error) {\n            console.log(\"Error\", error);\n        }\n    }\n\n    // async function getMovies(type) {\n    //     try {\n    //         let response;\n    //         switch (type) {\n    //             case \"N\":\n    //                 response = await getMoviesNowPlaying();\n    //                 break;\n    //             case \"P\":\n    //                 response = await getMoviesPopular();\n    //                 break;\n    //             case \"T\":\n    //                 response = await getMoviesTopRated();\n    //                 break;\n    //             case \"U\":\n    //                 response = await getMoviesUpcoming();\n    //                 break;\n    //             default:\n    //                 response = await getMoviesNowPlaying();\n    //                 break;\n    //         }\n\n    //         console.log(response.data);\n\n    //         setData(response.data);\n    //     } catch (error) {\n    //         console.log(\"Error\", error);\n    //     }\n    // }\n\n    const handleClick = (type) => {\n        getMovies(type);\n        setSelectedButton(type);\n    };\n\n    const categories = [\n        { category: \"Now Playing\", func: getMoviesNowPlaying },\n        { category: \"Popular\", func: getMoviesPopular },\n        { category: \"Top Rated\", func: getMoviesTopRated },\n        { category: \"Upcoming\", func: getMoviesUpcoming },\n    ];\n\n    return (\n        <>\n            <h1>Movie List</h1>\n            <Tab>\n                {\n                    // {} 는 return 들어가야 되고, 아니면 ()\n                    categories.map((c, i) => (\n                        <Button key={i} onClick={() => getMovies(i)}>\n                            {c.category}\n                        </Button>\n                    ))\n                }\n            </Tab>\n            <Button\n                className={selectedButton === \"N\" ? \"selected\" : \"none\"}\n                onClick={() => {\n                    handleClick(\"N\");\n                }}\n            >\n                Now Playing\n            </Button>\n            <Button\n                className={selectedButton === \"P\" ? \"selected\" : \"none\"}\n                onClick={() => {\n                    handleClick(\"P\");\n                }}\n            >\n                Popular\n            </Button>\n            <Button\n                className={selectedButton === \"T\" ? \"selected\" : \"none\"}\n                onClick={() => {\n                    handleClick(\"T\");\n                }}\n            >\n                Top Rated\n            </Button>\n            <Button\n                className={selectedButton === \"U\" ? \"selected\" : \"none\"}\n                onClick={() => {\n                    handleClick(\"U\");\n                }}\n            >\n                Upcoming\n            </Button>\n            <Container>\n                {data &&\n                    data.results.map((movie) => (\n                        <Card key={movie.id}>\n                            <Img src={IMG_PATH + movie.poster_path}></Img>\n                            <Text>타이틀 : {movie.title}</Text>\n                            <Text>장르 : {getGenre(movie.genre_ids)}</Text>\n                            <Text>소개글 : {movie.overview}</Text>\n                        </Card>\n                    ))}\n            </Container>\n        </>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}