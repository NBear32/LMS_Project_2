{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\lms_app\\\\src\\\\Components\\\\Unity\\\\UnityProject.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\nimport styled, { keyframes } from \"styled-components\";\nimport Modal from \"react-modal\";\n\n// Admin\nimport { UserManagement } from \"../LMS/Admin/UserManagement\";\nimport { LectureManagement } from \"../LMS/Admin/LectureManagement\";\nimport { EnrollmentManagement } from \"../LMS/Admin/EnrollmentManagement\";\n\n// Lecture\n// import { LectureList } from \"../LMS/Lecture/LectureList\";\nimport { LectureListModal } from \"../LMS/Lecture/LectureListModal\";\n\n// Blank Window 로 띄울 예정\n// import { LectureDetail } from \"../LMS/Lecture/LectureDetail\";\n\n// Cart\nimport { CartModal } from \"../LMS/Cart/CartModal\";\n\n// MyPage\nimport { MyPageUser } from \"../LMS/MyPage/MyPageUser\";\n// import { MyPageLecture } from \"../LMS/MyPage/MyPageLecture\";\nimport { MyPageLectureModal } from \"../LMS/MyPage/MyPageLectureModal\";\nimport { MyPageUserDelete } from \"../LMS/MyPage/MyPageUserDelete\";\n\n// Community\nimport { NoticesModal } from \"../LMS/Community/NoticesModal.js\";\nimport { QAModal } from \"../LMS/Community/QAModal.js\";\nimport { EventsModal } from \"../LMS/Community/EventsModal.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameBG = styled.div`\n    width: 100%;\n    /* height: 991px; */\n    height: 100vh; /* 화면 높이와 맞추기 위해 100vh로 변경 */\n    position: absolute;\n    top: 0;\n    background-image: url(\"/reactimage/Gamebg.png\");\n    background-size: cover;\n    background-position: center;\n    overflow: hidden; /* 추가 */\n`;\n_c = GameBG;\nconst GameBox = styled.div`\n    position: relative;\n`;\n_c2 = GameBox;\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\n// 게임을 로드할 화면을 만듬\nconst Container = styled.div`\n    /* top: 2px;\n    left: 86px;\n    width: 1726px;\n    height: 690px; */\n\n    position: absolute;\n    top: -1px;\n    left: 120px;\n    width: 1671px;\n    height: 690px;\n\n    margin: 80px auto;\n    border: 1px solid gray;\n    animation: ${fadeIn} 0.6s ease-out;\n`;\n_c3 = Container;\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"1400px\",\n    // 모달의 너비를 설정합니다. (기존 width)\n    height: \"865px\",\n    // 모달의 높이를 설정합니다. (기존 height)\n    padding: \"20px\",\n    borderRadius: \"10px\"\n  },\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\" // 오버레이의 배경색을 설정합니다.\n  }\n};\nexport function UnityProject() {\n  _s();\n  let qaUrlResponse = \"\";\n  const playingGame = true;\n\n  //let playingGame = false;\n  // const [playingGame, setPlayingGame] = useState(false);\n\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [userName, setUserName] = useState();\n  const [score, setScore] = useState();\n  const [modalOpen, setModalOpen] = useState(false);\n  // const modalBackground = useRef();\n\n  const [modalReturn, setModalReturn] = useState(null);\n\n  // Unity 게임의 로드 상태를 추적할 상태 변수 추가\n  const [isUnityLoaded, setIsUnityLoaded] = useState(false);\n  const closeModal = qaUrl => {\n    if (!qaUrl) {\n      setModalOpen(false);\n    } else {\n      // window.alert(\"UnityProject ModalResponse Message: \" + qaUrl);\n      qaUrlResponse = qaUrl;\n    }\n  };\n\n  // React 에서 Unity 로 sendMessage 를 통해 전달하기\n  // https://react-unity-webgl.dev/docs/advanced-examples/loading-overlay\n  const {\n    unityProvider,\n    sendMessage,\n    addEventListener,\n    removeEventListener\n  } = useUnityContext({\n    loaderUrl: \"build/Build.loader.js\",\n    dataUrl: \"build/Build.data\",\n    frameworkUrl: \"build/Build.framework.js\",\n    codeUrl: \"build/Build.wasm\"\n  });\n  function handleUnityOnLoaded() {\n    const urlCurrent = \"http://localhost:8080/user/current\"; // 세션 조회\n\n    // window.alert(\"urlCurrent: \" + urlCurrent);\n\n    axios.get(urlCurrent, {\n      withCredentials: true\n    }).then(response => {\n      const userName = response.data.userName;\n\n      // window.alert(\"[userName]: \" + userName);\n\n      // Unity로 데이터 전송\n      // window.alert(\"SendMessage Start!!!\");\n\n      sendMessage(\"Player\", \"ReceiveUserName\", userName);\n    }).catch(error => {\n      console.log(\"에러 발생: \", error);\n    });\n  }\n\n  // Unity 에서 React 로 전달\n  function handleGameOver(userName, score) {\n    setIsGameOver(true);\n    setUserName(userName);\n    setScore(score);\n  }\n\n  // // Unity에서 호출될 JavaScript 함수\n  // function handleOpenReactWindow(romeName) {\n  //     // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n  //     // React 애플리케이션의 URL로 새로운 탭을 열기\n  //     window.open(\"http://localhost:3000/community/notices\", \"_blank\");\n  // }\n\n  // Unity에서 호출될 JavaScript 함수\n  function handleOpenReactWindow(romeName) {\n    // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n    // React 애플리케이션의 URL로 새로운 탭을 열기\n\n    setModalOpen(true);\n\n    // Admin (회원관리, 강의관리, 수강관리)\n    // MyPage (회원정보, 나의학습, 회원탈퇴)\n    // Community (공지사항, 이벤트, 질의응답)\n    // Lecture & Cart (강의, 장바구니, 로그아웃)\n\n    if (romeName == \"회원정보\") {\n      setModalReturn(() => MyPageUser); // React component function\n    } else if (romeName == \"나의학습\") {\n      setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\n    } else if (romeName == \"회원탈퇴\") {\n      setModalReturn(() => MyPageUserDelete); // React component function\n    } else if (romeName == \"공지사항\") {\n      setModalReturn(() => NoticesModal); // React component function\n    } else if (romeName == \"이벤트\") {\n      setModalReturn(() => EventsModal); // React component function\n    } else if (romeName == \"질의응답\") {\n      setModalReturn(() => QAModal); // React component function\n    } else if (romeName == \"회원관리\") {\n      setModalReturn(() => UserManagement); // React component function\n    } else if (romeName == \"강의관리\") {\n      setModalReturn(() => LectureManagement); // React component function\n    } else if (romeName == \"수강관리\") {\n      setModalReturn(() => EnrollmentManagement); // React component function\n    } else if (romeName == \"강의\") {\n      setModalReturn(() => LectureListModal); // => 새로운 브라우저 창 열기\n    } else if (romeName == \"장바구니\") {\n      setModalReturn(() => CartModal); // React component function\n    } else if (romeName == \"로그아웃\") {\n      setModalReturn(() => {\n        window.location.href = \"http://localhost:3000/Login\";\n      }); // React component function\n    }\n  }\n  useEffect(() => {\n    addEventListener(\"GameOver\", handleGameOver);\n    return () => {\n      removeEventListener(\"GameOver\", handleGameOver);\n    };\n  }, []);\n  useEffect(() => {\n    addEventListener(\"OpenReactWindow\", handleOpenReactWindow);\n    return () => {\n      removeEventListener(\"OpenReactWindow\", handleOpenReactWindow);\n    };\n  }, []);\n  useEffect(() => {\n    addEventListener(\"UnityOnLoaded\", handleUnityOnLoaded);\n    return () => {\n      removeEventListener(\"UnityOnLoaded\", handleUnityOnLoaded);\n    };\n  }, []);\n  function ReactToUnityJSON(urlLectureContentQA) {\n    // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/${lectureId}/${data.learningContentsSeq}`; // /{lectureId}/{learningContentsSeq}\n    // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/L00000000052/3`; // /{lectureId}/{learningContentsSeq}\n\n    // window.alert(\"urlLectureContentQA: \" + urlLectureContentQA);\n\n    axios.get(urlLectureContentQA, {\n      withCredentials: true\n    }).then(response => {\n      console.log(\"UnityProject Response 데이터:\", response.data);\n      // window.alert(\n      //     \"response.data: \" +\n      //         response.data[0].question +\n      //         \"@\" +\n      //         response.data[1].question +\n      //         \"@\" +\n      //         response.data[2].question\n      // );\n\n      const jsonData = JSON.stringify(response.data);\n\n      // window.alert(\"React jsonData: \" + jsonData);\n\n      // Unity로 데이터 전송\n      // sendMessage(\"DataReceiverObject\", \"ReceiveJsonData\", jsonData);\n      // sendMessage(\"DataReceiver\", \"ReceiveJsonData\", jsonData);\n\n      // window.alert(\"SendMessage Start!!!\");\n\n      sendMessage(\"Canvas\", \"ReceiveJsonData\", jsonData);\n    }).catch(error => {\n      console.log(\"에러 발생: \", error);\n    });\n  }\n  function RequestFocus() {\n    // Focus 문제로 버그가 있어서, 이 부분을 제외할 경우 상단키를 입력하지 않으면, 플레이어 컨트롤이 안됨.\n    window.alert(\"계속 게임을 진행합니다.\");\n    ReactToUnityJSON(qaUrlResponse);\n    setModalOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GameBG, {\n      children: /*#__PURE__*/_jsxDEV(GameBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendMessage(\"Player\", \"ReceiveUserName\", \"테스트01\"),\n          children: \"\\uD50C\\uB808\\uC774\\uC5B4 \\uC774\\uB984 \\uC804\\uB2EC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: [playingGame ? /*#__PURE__*/_jsxDEV(Unity, {\n            unityProvider: unityProvider,\n            style: {\n              width: \"100%\",\n              height: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 29\n          }, this) : null, modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-container\"\n            // ref={modalBackground}\n            // onClick={(e) => {\n            //     // 모달 밖의 부분 클릭시 Close\n            //     if (e.target === modalBackground.current) {\n            //         setModalOpen(false);\n            //         sendMessage(\"PortalManager\", \"ContinueGame\");\n            //         RequestFocus();\n            //     }\n            //}}\n            ,\n            children: /*#__PURE__*/_jsxDEV(Modal, {\n              isOpen: modalOpen,\n              shouldCloseOnOverlayClick: false // 모달 바깥을 클릭해도 모달이 닫히지 않도록 설정\n              ,\n              onRequestClose: () => {\n                setModalOpen(false);\n              },\n              style: customStyles // 스타일을 적용합니다.\n              ,\n              contentLabel: \"Modal Window\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"close\"\n                /* 오른쪽 상단 x 클릭시 Close */,\n                onClick: () => {\n                  setModalOpen(false);\n                  sendMessage(\"PortalManager\", \"ContinueGame\");\n                  RequestFocus();\n                },\n                style: {\n                  cursor: \"pointer\",\n                  fontSize: \"1.5rem\",\n                  position: \"absolute\",\n                  top: \"10px\",\n                  right: \"10px\",\n                  color: \"white\" // 버튼 색상을 하얀색으로 설정\n                },\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 37\n              }, this), modalReturn && /*#__PURE__*/React.createElement(modalReturn, modalReturn === MyPageLectureModal ? {\n                onClose: closeModal\n              } : {}), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), isGameOver === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Game Over ${userName}! You've scored ${score} points.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(UnityProject, \"wTvaUkpsvhNzPtVVBISJ17TgF58=\", false, function () {\n  return [useUnityContext];\n});\n_c4 = UnityProject;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GameBG\");\n$RefreshReg$(_c2, \"GameBox\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"UnityProject\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Unity","useUnityContext","styled","keyframes","Modal","UserManagement","LectureManagement","EnrollmentManagement","LectureListModal","CartModal","MyPageUser","MyPageLectureModal","MyPageUserDelete","NoticesModal","QAModal","EventsModal","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GameBG","div","_c","GameBox","_c2","fadeIn","Container","_c3","customStyles","content","top","left","right","bottom","transform","width","height","padding","borderRadius","overlay","backgroundColor","UnityProject","_s","qaUrlResponse","playingGame","isGameOver","setIsGameOver","userName","setUserName","score","setScore","modalOpen","setModalOpen","modalReturn","setModalReturn","isUnityLoaded","setIsUnityLoaded","closeModal","qaUrl","unityProvider","sendMessage","addEventListener","removeEventListener","loaderUrl","dataUrl","frameworkUrl","codeUrl","handleUnityOnLoaded","urlCurrent","get","withCredentials","then","response","data","catch","error","console","log","handleGameOver","handleOpenReactWindow","romeName","window","location","href","ReactToUnityJSON","urlLectureContentQA","jsonData","JSON","stringify","RequestFocus","alert","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","className","isOpen","shouldCloseOnOverlayClick","onRequestClose","contentLabel","cursor","fontSize","position","color","createElement","onClose","_c4","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/lms_app/src/Components/Unity/UnityProject.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport Modal from \"react-modal\";\n\n// Admin\nimport { UserManagement } from \"../LMS/Admin/UserManagement\";\nimport { LectureManagement } from \"../LMS/Admin/LectureManagement\";\nimport { EnrollmentManagement } from \"../LMS/Admin/EnrollmentManagement\";\n\n// Lecture\n// import { LectureList } from \"../LMS/Lecture/LectureList\";\nimport { LectureListModal } from \"../LMS/Lecture/LectureListModal\";\n\n// Blank Window 로 띄울 예정\n// import { LectureDetail } from \"../LMS/Lecture/LectureDetail\";\n\n// Cart\nimport { CartModal } from \"../LMS/Cart/CartModal\";\n\n// MyPage\nimport { MyPageUser } from \"../LMS/MyPage/MyPageUser\";\n// import { MyPageLecture } from \"../LMS/MyPage/MyPageLecture\";\nimport { MyPageLectureModal } from \"../LMS/MyPage/MyPageLectureModal\";\nimport { MyPageUserDelete } from \"../LMS/MyPage/MyPageUserDelete\";\n\n// Community\nimport { NoticesModal } from \"../LMS/Community/NoticesModal.js\";\nimport { QAModal } from \"../LMS/Community/QAModal.js\";\nimport { EventsModal } from \"../LMS/Community/EventsModal.js\";\n\nimport axios from \"axios\";\n\nconst GameBG = styled.div`\n    width: 100%;\n    /* height: 991px; */\n    height: 100vh; /* 화면 높이와 맞추기 위해 100vh로 변경 */\n    position: absolute;\n    top: 0;\n    background-image: url(\"/reactimage/Gamebg.png\");\n    background-size: cover;\n    background-position: center;\n    overflow: hidden; /* 추가 */\n`;\n\nconst GameBox = styled.div`\n    position: relative;\n`;\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\n// 게임을 로드할 화면을 만듬\nconst Container = styled.div`\n    /* top: 2px;\n    left: 86px;\n    width: 1726px;\n    height: 690px; */\n\n    position: absolute;\n    top: -1px;\n    left: 120px;\n    width: 1671px;\n    height: 690px;\n\n    margin: 80px auto;\n    border: 1px solid gray;\n    animation: ${fadeIn} 0.6s ease-out;\n`;\n\nconst customStyles = {\n    content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"1400px\", // 모달의 너비를 설정합니다. (기존 width)\n        height: \"865px\", // 모달의 높이를 설정합니다. (기존 height)\n        padding: \"20px\",\n        borderRadius: \"10px\",\n    },\n    overlay: {\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\", // 오버레이의 배경색을 설정합니다.\n    },\n};\n\nexport function UnityProject() {\n    let qaUrlResponse = \"\";\n    const playingGame = true;\n\n    //let playingGame = false;\n    // const [playingGame, setPlayingGame] = useState(false);\n\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [userName, setUserName] = useState();\n    const [score, setScore] = useState();\n\n    const [modalOpen, setModalOpen] = useState(false);\n    // const modalBackground = useRef();\n\n    const [modalReturn, setModalReturn] = useState(null);\n\n    // Unity 게임의 로드 상태를 추적할 상태 변수 추가\n    const [isUnityLoaded, setIsUnityLoaded] = useState(false);\n\n    const closeModal = (qaUrl) => {\n        if (!qaUrl) {\n            setModalOpen(false);\n        } else {\n            // window.alert(\"UnityProject ModalResponse Message: \" + qaUrl);\n            qaUrlResponse = qaUrl;\n        }\n    };\n\n    // React 에서 Unity 로 sendMessage 를 통해 전달하기\n    // https://react-unity-webgl.dev/docs/advanced-examples/loading-overlay\n    const {\n        unityProvider,\n        sendMessage,\n        addEventListener,\n        removeEventListener,\n    } = useUnityContext({\n        loaderUrl: \"build/Build.loader.js\",\n        dataUrl: \"build/Build.data\",\n        frameworkUrl: \"build/Build.framework.js\",\n        codeUrl: \"build/Build.wasm\",\n    });\n\n    function handleUnityOnLoaded() {\n        const urlCurrent = \"http://localhost:8080/user/current\"; // 세션 조회\n\n        // window.alert(\"urlCurrent: \" + urlCurrent);\n\n        axios\n            .get(urlCurrent, {\n                withCredentials: true,\n            })\n            .then((response) => {\n                const userName = response.data.userName;\n\n                // window.alert(\"[userName]: \" + userName);\n\n                // Unity로 데이터 전송\n                // window.alert(\"SendMessage Start!!!\");\n\n                sendMessage(\"Player\", \"ReceiveUserName\", userName);\n            })\n            .catch((error) => {\n                console.log(\"에러 발생: \", error);\n            });\n    }\n\n    // Unity 에서 React 로 전달\n    function handleGameOver(userName, score) {\n        setIsGameOver(true);\n        setUserName(userName);\n        setScore(score);\n    }\n\n    // // Unity에서 호출될 JavaScript 함수\n    // function handleOpenReactWindow(romeName) {\n    //     // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n    //     // React 애플리케이션의 URL로 새로운 탭을 열기\n    //     window.open(\"http://localhost:3000/community/notices\", \"_blank\");\n    // }\n\n    // Unity에서 호출될 JavaScript 함수\n    function handleOpenReactWindow(romeName) {\n        // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n        // React 애플리케이션의 URL로 새로운 탭을 열기\n\n        setModalOpen(true);\n\n        // Admin (회원관리, 강의관리, 수강관리)\n        // MyPage (회원정보, 나의학습, 회원탈퇴)\n        // Community (공지사항, 이벤트, 질의응답)\n        // Lecture & Cart (강의, 장바구니, 로그아웃)\n\n        if (romeName == \"회원정보\") {\n            setModalReturn(() => MyPageUser); // React component function\n        } else if (romeName == \"나의학습\") {\n            setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\n        } else if (romeName == \"회원탈퇴\") {\n            setModalReturn(() => MyPageUserDelete); // React component function\n        } else if (romeName == \"공지사항\") {\n            setModalReturn(() => NoticesModal); // React component function\n        } else if (romeName == \"이벤트\") {\n            setModalReturn(() => EventsModal); // React component function\n        } else if (romeName == \"질의응답\") {\n            setModalReturn(() => QAModal); // React component function\n        } else if (romeName == \"회원관리\") {\n            setModalReturn(() => UserManagement); // React component function\n        } else if (romeName == \"강의관리\") {\n            setModalReturn(() => LectureManagement); // React component function\n        } else if (romeName == \"수강관리\") {\n            setModalReturn(() => EnrollmentManagement); // React component function\n        } else if (romeName == \"강의\") {\n            setModalReturn(() => LectureListModal); // => 새로운 브라우저 창 열기\n        } else if (romeName == \"장바구니\") {\n            setModalReturn(() => CartModal); // React component function\n        } else if (romeName == \"로그아웃\") {\n            setModalReturn(() => {\n                window.location.href = \"http://localhost:3000/Login\";\n            }); // React component function\n        }\n    }\n\n    useEffect(() => {\n        addEventListener(\"GameOver\", handleGameOver);\n        return () => {\n            removeEventListener(\"GameOver\", handleGameOver);\n        };\n    }, []);\n\n    useEffect(() => {\n        addEventListener(\"OpenReactWindow\", handleOpenReactWindow);\n        return () => {\n            removeEventListener(\"OpenReactWindow\", handleOpenReactWindow);\n        };\n    }, []);\n\n    useEffect(() => {\n        addEventListener(\"UnityOnLoaded\", handleUnityOnLoaded);\n        return () => {\n            removeEventListener(\"UnityOnLoaded\", handleUnityOnLoaded);\n        };\n    }, []);\n\n    function ReactToUnityJSON(urlLectureContentQA) {\n        // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/${lectureId}/${data.learningContentsSeq}`; // /{lectureId}/{learningContentsSeq}\n        // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/L00000000052/3`; // /{lectureId}/{learningContentsSeq}\n\n        // window.alert(\"urlLectureContentQA: \" + urlLectureContentQA);\n\n        axios\n            .get(urlLectureContentQA, {\n                withCredentials: true,\n            })\n            .then((response) => {\n                console.log(\"UnityProject Response 데이터:\", response.data);\n                // window.alert(\n                //     \"response.data: \" +\n                //         response.data[0].question +\n                //         \"@\" +\n                //         response.data[1].question +\n                //         \"@\" +\n                //         response.data[2].question\n                // );\n\n                const jsonData = JSON.stringify(response.data);\n\n                // window.alert(\"React jsonData: \" + jsonData);\n\n                // Unity로 데이터 전송\n                // sendMessage(\"DataReceiverObject\", \"ReceiveJsonData\", jsonData);\n                // sendMessage(\"DataReceiver\", \"ReceiveJsonData\", jsonData);\n\n                // window.alert(\"SendMessage Start!!!\");\n\n                sendMessage(\"Canvas\", \"ReceiveJsonData\", jsonData);\n            })\n            .catch((error) => {\n                console.log(\"에러 발생: \", error);\n            });\n    }\n\n    function RequestFocus() {\n        // Focus 문제로 버그가 있어서, 이 부분을 제외할 경우 상단키를 입력하지 않으면, 플레이어 컨트롤이 안됨.\n        window.alert(\"계속 게임을 진행합니다.\");\n        ReactToUnityJSON(qaUrlResponse);\n        setModalOpen(false);\n    }\n\n    return (\n        <>\n            <GameBG>\n                <GameBox>\n                    {/* <h1>UnityProject Game</h1> */}\n                    {/* <button onClick={() => {\n                playingGame = true;\n//                PlayingGame(true)\n            }}>Start Game</button> */}\n\n                    {/* // 버튼 테스트\n            <button onClick={() => sendMessage(\"PortalManager\", \"PauseGame\")}>\n                Pause Game\n            </button>\n            <button\n                onClick={() => sendMessage(\"PortalManager\", \"ContinueGame\")}\n            >\n                Continue Game\n            </button>\n            <button onClick={() => sendMessage(\"Player\", \"Attack\")}>\n                Attack\n            </button> */}\n                    <button\n                        onClick={() =>\n                            sendMessage(\"Player\", \"ReceiveUserName\", \"테스트01\")\n                        }\n                    >\n                        플레이어 이름 전달\n                    </button>\n                    {/* <button\n                onClick={() =>\n                    ReactToUnityJSON(\n                        \"http://localhost:8080/learning/contents/qa/L00000000052/3\"\n                    )\n                }\n            >\n                ReactToUnityJSON\n            </button> */}\n\n                    <Container>\n                        {/* <div className={\"btn-wrapper\"}>\n                    <button\n                        className={\"modal-open-btn\"}\n                        onClick={() => setModalOpen(true)}\n                    >\n                        모달 열기\n                    </button>\n                </div> */}\n\n                        {/* {isLoaded === false && (\n                            <div className=\"loading-overlay\">\n                                <p>\n                                    Loading... (\n                                    {Math.round(loadingProgression * 100)}%)\n                                </p>\n                            </div>\n                        )}\n                        {playingGame && (\n                            <Unity\n                                unityProvider={unityProvider}\n                                style={{ width: \"100%\", height: \"100%\" }}\n                            />\n                        )} */}\n\n                        {playingGame ? (\n                            <Unity\n                                unityProvider={unityProvider}\n                                style={{\n                                    width: \"100%\",\n                                    height: \"100%\",\n                                }}\n                            />\n                        ) : null}\n\n                        {modalOpen && (\n                            <div\n                                className={\"modal-container\"}\n                                // ref={modalBackground}\n                                // onClick={(e) => {\n                                //     // 모달 밖의 부분 클릭시 Close\n                                //     if (e.target === modalBackground.current) {\n                                //         setModalOpen(false);\n                                //         sendMessage(\"PortalManager\", \"ContinueGame\");\n                                //         RequestFocus();\n                                //     }\n                                //}}\n                            >\n                                {/* <div className={\"modal-content\"}> */}\n                                <Modal\n                                    isOpen={modalOpen}\n                                    shouldCloseOnOverlayClick={false} // 모달 바깥을 클릭해도 모달이 닫히지 않도록 설정\n                                    onRequestClose={() => {\n                                        setModalOpen(false);\n                                    }}\n                                    style={customStyles} // 스타일을 적용합니다.\n                                    contentLabel=\"Modal Window\"\n                                >\n                                    <span\n                                        className=\"close\"\n                                        /* 오른쪽 상단 x 클릭시 Close */\n                                        onClick={() => {\n                                            setModalOpen(false);\n                                            sendMessage(\n                                                \"PortalManager\",\n                                                \"ContinueGame\"\n                                            );\n                                            RequestFocus();\n                                        }}\n                                        style={{\n                                            cursor: \"pointer\",\n                                            fontSize: \"1.5rem\",\n                                            position: \"absolute\",\n                                            top: \"10px\",\n                                            right: \"10px\",\n                                            color: \"white\", // 버튼 색상을 하얀색으로 설정\n                                        }}\n                                    >\n                                        &times;\n                                    </span>\n                                    {/* <h1>리액트로 모달</h1> */}\n                                    {modalReturn &&\n                                        React.createElement(\n                                            modalReturn,\n                                            modalReturn === MyPageLectureModal\n                                                ? { onClose: closeModal }\n                                                : {}\n                                        )}\n                                    {/* {modalReturn && React.createElement(modalReturn)} */}\n                                    <br></br>\n                                    {/* <button\n                                // [모달 닫기] 버튼 클릭시 Close\n                                onClick={() => {\n                                    setModalOpen(false);\n                                    sendMessage(\n                                        \"PortalManager\",\n                                        \"ContinueGame\"\n                                    );\n                                    RequestFocus();\n                                }}\n                            >\n                                모달 닫기\n                            </button> */}\n                                </Modal>\n                                {/* </div> */}\n                            </div>\n                        )}\n                    </Container>\n                </GameBox>\n            </GameBG>\n\n            {/* // Unity 에서 게임오버 메시지를 받으면 출력후 종료 */}\n            {isGameOver === true && (\n                <p>{`Game Over ${userName}! You've scored ${score} points.`}</p>\n            )}\n        </>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}