{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\React\\\\my_app\\\\src\\\\Components\\\\Unity\\\\TopDownAction.js\",\n  _s = $RefreshSig$();\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\n// 게임을 로드할 화면을 만듬\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    width: 1344px;\n    height: 756px;\n    // margin: auto;\n    margin-right: 600px;\n    margin-bottom: 350px;\n    border: 1px solid gray;\n`;\n_c = Container;\nexport function TopDownAction() {\n  _s();\n  // const { unityProvider } = useUnityContext({\n  //     loaderUrl: \"build/myunityapp.loader.js\",\n  //     dataUrl: \"build/myunityapp.data\",\n  //     frameworkUrl: \"build/myunityapp.framework.js\",\n  //     codeUrl: \"build/myunityapp.wasm\",\n  // });\n\n  const [playingGame, setPlayingGame] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [userName, setUserName] = useState();\n  const [score, setScore] = useState();\n\n  // React 에서 Unity 로 sendMessage 를 통해 전달하기\n  const {\n    unityProvider,\n    sendMessage,\n    addEventListener,\n    removeEventListener\n  } = useUnityContext({\n    loaderUrl: \"build/Build.loader.js\",\n    dataUrl: \"build/Build.data\",\n    frameworkUrl: \"build/Build.framework.js\",\n    codeUrl: \"build/Build.wasm\"\n  });\n  function handleGameOver(userName, score) {\n    setIsGameOver(true);\n    setUserName(userName);\n    setScore(score);\n  }\n  useEffect(() => {\n    addEventListener(\"GameOver\", handleGameOver);\n    return () => {\n      removeEventListener(\"GameOver\", handleGameOver);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top Down Action Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPlayingGame(true),\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage(\"Player\", \"Attack\"),\n      children: \"Attack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: playingGame ? /*#__PURE__*/_jsxDEV(Unity, {\n        unityProvider: unityProvider,\n        style: {\n          width: \"50%\",\n          height: \"50%\"\n        }\n        // style={{\n        //     width: \"100%\",\n        //     height: \"100%\",\n        // }}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), isGameOver === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Game Over ${userName}! You've scored ${score} points.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(TopDownAction, \"X6Ch7sU7QW5YEdKRt8zvgRjdyeE=\", false, function () {\n  return [useUnityContext];\n});\n_c2 = TopDownAction;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TopDownAction\");","map":{"version":3,"names":["Unity","useUnityContext","useState","useEffect","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","TopDownAction","_s","playingGame","setPlayingGame","isGameOver","setIsGameOver","userName","setUserName","score","setScore","unityProvider","sendMessage","addEventListener","removeEventListener","loaderUrl","dataUrl","frameworkUrl","codeUrl","handleGameOver","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","height","_c2","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/React/my_app/src/Components/Unity/TopDownAction.js"],"sourcesContent":["import { Unity, useUnityContext } from \"react-unity-webgl\";\r\nimport { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// 게임을 로드할 화면을 만듬\r\nconst Container = styled.div`\r\n    width: 1344px;\r\n    height: 756px;\r\n    // margin: auto;\r\n    margin-right: 600px;\r\n    margin-bottom: 350px;\r\n    border: 1px solid gray;\r\n`;\r\n\r\nexport function TopDownAction() {\r\n    // const { unityProvider } = useUnityContext({\r\n    //     loaderUrl: \"build/myunityapp.loader.js\",\r\n    //     dataUrl: \"build/myunityapp.data\",\r\n    //     frameworkUrl: \"build/myunityapp.framework.js\",\r\n    //     codeUrl: \"build/myunityapp.wasm\",\r\n    // });\r\n\r\n    const [playingGame, setPlayingGame] = useState(false);\r\n\r\n    const [isGameOver, setIsGameOver] = useState(false);\r\n    const [userName, setUserName] = useState();\r\n    const [score, setScore] = useState();\r\n\r\n    // React 에서 Unity 로 sendMessage 를 통해 전달하기\r\n    const {\r\n        unityProvider,\r\n        sendMessage,\r\n        addEventListener,\r\n        removeEventListener,\r\n    } = useUnityContext({\r\n        loaderUrl: \"build/Build.loader.js\",\r\n        dataUrl: \"build/Build.data\",\r\n        frameworkUrl: \"build/Build.framework.js\",\r\n        codeUrl: \"build/Build.wasm\",\r\n    });\r\n\r\n    function handleGameOver(userName, score) {\r\n        setIsGameOver(true);\r\n        setUserName(userName);\r\n        setScore(score);\r\n    }\r\n\r\n    useEffect(() => {\r\n        addEventListener(\"GameOver\", handleGameOver);\r\n        return () => {\r\n            removeEventListener(\"GameOver\", handleGameOver);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Top Down Action Game</h1>\r\n            <button onClick={() => setPlayingGame(true)}>Start Game</button>\r\n            <button onClick={() => sendMessage(\"Player\", \"Attack\")}>\r\n                Attack\r\n            </button>\r\n            <Container>\r\n                {playingGame ? (\r\n                    <Unity\r\n                        unityProvider={unityProvider}\r\n                        style={{\r\n                            width: \"50%\",\r\n                            height: \"50%\",\r\n                        }}\r\n                        // style={{\r\n                        //     width: \"100%\",\r\n                        //     height: \"100%\",\r\n                        // }}\r\n                    />\r\n                ) : null}\r\n            </Container>\r\n\r\n            {/* // Unity 에서 게임오버 메시지를 받으면 출력후 종료 */}\r\n            {isGameOver === true && (\r\n                <p>{`Game Over ${userName}! You've scored ${score} points.`}</p>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}