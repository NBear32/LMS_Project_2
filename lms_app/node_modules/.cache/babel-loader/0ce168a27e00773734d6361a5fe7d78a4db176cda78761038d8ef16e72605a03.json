{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\lms_app\\\\src\\\\Components\\\\LMS\\\\Search\\\\Search.js\",\n  _s = $RefreshSig$();\n// import styled from \"styled-components\";\n// import { useState, useEffect } from \"react\";\n// import { IMG_PATH } from \"../api\";\n// import { useNavigate, useLocation } from \"react-router-dom\";\n// import { searchMoviesByKeyword, getGenre } from \"../api\";\n\n// const SearchBox = styled.div``;\n\n// const Input = styled.input`\n//   width: 500px;\n//   margin-right: 5px;\n// `;\n\n// const Container = styled.div`\n//   width: 100%;\n//   display: grid;\n//   grid-template-columns: 1fr 1fr 1fr;\n//   gap: 10px;\n//   margin-top: 20px;\n//   margin-bottom: 50px;\n// `;\n\n// const Card = styled.div`\n//   width: 100%;\n//   border: 1px solid dodgerblue;\n//   cursor: pointer;\n//   padding: 10px;\n// `;\n\n// const Img = styled.img`\n//   width: 100%;\n// `;\n\n// const Text = styled.div`\n//   color: #333;\n//   margin: 2px 0;\n// `;\n\n// export function Search() {\n//   const [data, setData] = useState(null);\n//   const [inputValue, setInputValue] = useState(\"\");\n\n//   const navigate = useNavigate(); // url 변경시키는 함수\n\n//   const location = useLocation();\n//   const keyword = new URLSearchParams(location.search).get(\"keyword\"); // keyword => inputValue\n\n//   // 키워드가 없으면, 예전 검색이 다시 뜨지 않도록 초기화\n//   useEffect(() => {\n//     if (keyword) {\n//       searchMovies();\n//     } else {\n//       setData(null);\n//     }\n//   }, [keyword]);\n\n//   async function searchMovies(keyword) {\n//     try {\n//       const response = await searchMoviesByKeyword(keyword);\n//       console.log(response.data);\n//       setData(response.data);\n//     } catch (error) {\n//       console.log(\"Error\", error);\n//     }\n//   }\n\n//   return (\n//     <>\n//       <SearchBox>\n//         <h1>상세조회 페이지 입니다.</h1>\n//         <Input\n//           placeholder=\"검색어를 입력해주세요\"\n//           value={inputValue}\n//           onChange={(e) => setInputValue(e.target.value)}\n//         />\n//         <button\n//           // inputValue 를 url [/search?] 뒤에 붙여 api 전달 예정 [/search?keyword=batman]\n//           onClick={() => {\n//             navigate(`?query=${inputValue}`); // requestParam\n//             searchMovies(inputValue);\n//           }}\n//         >\n//           Search\n//         </button>\n//       </SearchBox>\n//       {/* // keyword 가 있으면 keyword, 없으면 null */}\n//       <h3>{keyword ? `\"${keyword}\" 로 검색한 결과 ` : null}</h3>\n//       <Container>\n//         {data &&\n//           data.results.map((movie) => (\n//             <Card\n//               key={movie.id}\n//               onClick={() => {\n//                 navigate(`/movie/${movie.id}`);\n//               }}\n//             >\n//               {/* <Img src={IMG_PATH + movie.backdrop_path}></Img> */}\n//               <Img src={IMG_PATH + movie.poster_path}></Img>\n//               <Text>\n//                 <b>타이틀 : {movie.title} </b>\n//               </Text>\n//               <Text>\n//                 <b>장르 : {getGenre(movie.genre_ids)} </b>\n//               </Text>\n//               <hr />\n//               <Text>{movie.overview}</Text>\n//             </Card>\n//           ))}\n//       </Container>\n//     </>\n//   );\n// }\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\n// Styled components 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrap = styled.div`\n  position: relative;\n  top: ${props => props.top}vh;\n  width: 100%;\n  height: 100%;\n  transition: top 0.5s;\n`;\n_c = Wrap;\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.bgColor};\n`;\n_c2 = Container;\nfunction App() {\n  _s();\n  const [page, setPage] = useState(0);\n  const lastPage = 3; // 페이지 수 - 1\n\n  useEffect(() => {\n    const handleScroll = e => {\n      e.preventDefault();\n      if (e.deltaY > 0) {\n        setPage(prevPage => Math.min(prevPage + 1, lastPage));\n      } else if (e.deltaY < 0) {\n        setPage(prevPage => Math.max(prevPage - 1, 0));\n      }\n    };\n    window.addEventListener(\"wheel\", handleScroll, {\n      passive: false\n    });\n    return () => {\n      window.removeEventListener(\"wheel\", handleScroll);\n    };\n  }, [lastPage]);\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    top: page * -100,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      bgColor: \"#9e97cb\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: \"1\\uD398\\uC774\\uC9C0 \\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      bgColor: \"#dbd8eb\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: \"2\\uD398\\uC774\\uC9C0 \\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      bgColor: \"#348edd\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: \"3\\uD398\\uC774\\uC9C0 \\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      bgColor: \"#d4daea\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: \"4\\uD398\\uC774\\uC9C0 \\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HPzrZWH9eBjznL8xgTfWVnZD/Qw=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Wrap","div","props","top","_c","Container","bgColor","_c2","App","_s","page","setPage","lastPage","handleScroll","e","preventDefault","deltaY","prevPage","Math","min","max","window","addEventListener","passive","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/lms_app/src/Components/LMS/Search/Search.js"],"sourcesContent":["// import styled from \"styled-components\";\n// import { useState, useEffect } from \"react\";\n// import { IMG_PATH } from \"../api\";\n// import { useNavigate, useLocation } from \"react-router-dom\";\n// import { searchMoviesByKeyword, getGenre } from \"../api\";\n\n// const SearchBox = styled.div``;\n\n// const Input = styled.input`\n//   width: 500px;\n//   margin-right: 5px;\n// `;\n\n// const Container = styled.div`\n//   width: 100%;\n//   display: grid;\n//   grid-template-columns: 1fr 1fr 1fr;\n//   gap: 10px;\n//   margin-top: 20px;\n//   margin-bottom: 50px;\n// `;\n\n// const Card = styled.div`\n//   width: 100%;\n//   border: 1px solid dodgerblue;\n//   cursor: pointer;\n//   padding: 10px;\n// `;\n\n// const Img = styled.img`\n//   width: 100%;\n// `;\n\n// const Text = styled.div`\n//   color: #333;\n//   margin: 2px 0;\n// `;\n\n// export function Search() {\n//   const [data, setData] = useState(null);\n//   const [inputValue, setInputValue] = useState(\"\");\n\n//   const navigate = useNavigate(); // url 변경시키는 함수\n\n//   const location = useLocation();\n//   const keyword = new URLSearchParams(location.search).get(\"keyword\"); // keyword => inputValue\n\n//   // 키워드가 없으면, 예전 검색이 다시 뜨지 않도록 초기화\n//   useEffect(() => {\n//     if (keyword) {\n//       searchMovies();\n//     } else {\n//       setData(null);\n//     }\n//   }, [keyword]);\n\n//   async function searchMovies(keyword) {\n//     try {\n//       const response = await searchMoviesByKeyword(keyword);\n//       console.log(response.data);\n//       setData(response.data);\n//     } catch (error) {\n//       console.log(\"Error\", error);\n//     }\n//   }\n\n//   return (\n//     <>\n//       <SearchBox>\n//         <h1>상세조회 페이지 입니다.</h1>\n//         <Input\n//           placeholder=\"검색어를 입력해주세요\"\n//           value={inputValue}\n//           onChange={(e) => setInputValue(e.target.value)}\n//         />\n//         <button\n//           // inputValue 를 url [/search?] 뒤에 붙여 api 전달 예정 [/search?keyword=batman]\n//           onClick={() => {\n//             navigate(`?query=${inputValue}`); // requestParam\n//             searchMovies(inputValue);\n//           }}\n//         >\n//           Search\n//         </button>\n//       </SearchBox>\n//       {/* // keyword 가 있으면 keyword, 없으면 null */}\n//       <h3>{keyword ? `\"${keyword}\" 로 검색한 결과 ` : null}</h3>\n//       <Container>\n//         {data &&\n//           data.results.map((movie) => (\n//             <Card\n//               key={movie.id}\n//               onClick={() => {\n//                 navigate(`/movie/${movie.id}`);\n//               }}\n//             >\n//               {/* <Img src={IMG_PATH + movie.backdrop_path}></Img> */}\n//               <Img src={IMG_PATH + movie.poster_path}></Img>\n//               <Text>\n//                 <b>타이틀 : {movie.title} </b>\n//               </Text>\n//               <Text>\n//                 <b>장르 : {getGenre(movie.genre_ids)} </b>\n//               </Text>\n//               <hr />\n//               <Text>{movie.overview}</Text>\n//             </Card>\n//           ))}\n//       </Container>\n//     </>\n//   );\n// }\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\n// Styled components 정의\nconst Wrap = styled.div`\n  position: relative;\n  top: ${(props) => props.top}vh;\n  width: 100%;\n  height: 100%;\n  transition: top 0.5s;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${(props) => props.bgColor};\n`;\n\nfunction App() {\n  const [page, setPage] = useState(0);\n  const lastPage = 3; // 페이지 수 - 1\n\n  useEffect(() => {\n    const handleScroll = (e) => {\n      e.preventDefault();\n      if (e.deltaY > 0) {\n        setPage((prevPage) => Math.min(prevPage + 1, lastPage));\n      } else if (e.deltaY < 0) {\n        setPage((prevPage) => Math.max(prevPage - 1, 0));\n      }\n    };\n\n    window.addEventListener(\"wheel\", handleScroll, { passive: false });\n\n    return () => {\n      window.removeEventListener(\"wheel\", handleScroll);\n    };\n  }, [lastPage]);\n\n  return (\n    <Wrap top={page * -100}>\n      {/* 1페이지 */}\n      <Container bgColor=\"#9e97cb\">\n        <section>1페이지 내용</section>\n      </Container>\n\n      {/* 2페이지 */}\n      <Container bgColor=\"#dbd8eb\">\n        <section>2페이지 내용</section>\n      </Container>\n\n      {/* 3페이지 */}\n      <Container bgColor=\"#348edd\">\n        <section>3페이지 내용</section>\n      </Container>\n\n      {/* 4페이지 */}\n      <Container bgColor=\"#d4daea\">\n        <section>4페이지 내용</section>\n      </Container>\n    </Wrap>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAG;AACvB;AACA,SAAUC,KAAK,IAAKA,KAAK,CAACC,GAAG;AAC7B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIJ,IAAI;AAQV,MAAMK,SAAS,GAAGR,MAAM,CAACI,GAAG;AAC5B;AACA;AACA,sBAAuBC,KAAK,IAAKA,KAAK,CAACI,OAAO;AAC9C,CAAC;AAACC,GAAA,GAJIF,SAAS;AAMf,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMiB,QAAQ,GAAG,CAAC,CAAC,CAAC;;EAEpBhB,SAAS,CAAC,MAAM;IACd,MAAMiB,YAAY,GAAIC,CAAC,IAAK;MAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,IAAID,CAAC,CAACE,MAAM,GAAG,CAAC,EAAE;QAChBL,OAAO,CAAEM,QAAQ,IAAKC,IAAI,CAACC,GAAG,CAACF,QAAQ,GAAG,CAAC,EAAEL,QAAQ,CAAC,CAAC;MACzD,CAAC,MAAM,IAAIE,CAAC,CAACE,MAAM,GAAG,CAAC,EAAE;QACvBL,OAAO,CAAEM,QAAQ,IAAKC,IAAI,CAACE,GAAG,CAACH,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;MAClD;IACF,CAAC;IAEDI,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAET,YAAY,EAAE;MAAEU,OAAO,EAAE;IAAM,CAAC,CAAC;IAElE,OAAO,MAAM;MACXF,MAAM,CAACG,mBAAmB,CAAC,OAAO,EAAEX,YAAY,CAAC;IACnD,CAAC;EACH,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBACEb,OAAA,CAACC,IAAI;IAACG,GAAG,EAAEO,IAAI,GAAG,CAAC,GAAI;IAAAe,QAAA,gBAErB1B,OAAA,CAACM,SAAS;MAACC,OAAO,EAAC,SAAS;MAAAmB,QAAA,eAC1B1B,OAAA;QAAA0B,QAAA,EAAS;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAGZ9B,OAAA,CAACM,SAAS;MAACC,OAAO,EAAC,SAAS;MAAAmB,QAAA,eAC1B1B,OAAA;QAAA0B,QAAA,EAAS;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAGZ9B,OAAA,CAACM,SAAS;MAACC,OAAO,EAAC,SAAS;MAAAmB,QAAA,eAC1B1B,OAAA;QAAA0B,QAAA,EAAS;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAGZ9B,OAAA,CAACM,SAAS;MAACC,OAAO,EAAC,SAAS;MAAAmB,QAAA,eAC1B1B,OAAA;QAAA0B,QAAA,EAAS;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAACpB,EAAA,CA5CQD,GAAG;AAAAsB,GAAA,GAAHtB,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}