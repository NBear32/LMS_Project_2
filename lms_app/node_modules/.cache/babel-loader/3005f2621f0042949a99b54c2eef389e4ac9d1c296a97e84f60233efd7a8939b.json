{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\lms_app\\\\src\\\\Components\\\\Unity\\\\UnityProject.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\n\n// Admin\nimport { UserManagement } from \"../LMS/Admin/UserManagement\";\nimport { LectureManagement } from \"../LMS/Admin/LectureManagement\";\nimport { EnrollmentManagement } from \"../LMS/Admin/EnrollmentManagement\";\n\n// Lecture\n// import { LectureList } from \"../LMS/Lecture/LectureList\";\nimport { LectureListModal } from \"../LMS/Lecture/LectureListModal\";\n\n// Blank Window 로 띄울 예정\n// import { LectureDetail } from \"../LMS/Lecture/LectureDetail\";\n\n// Cart\nimport { CartModal } from \"../LMS/Cart/CartModal\";\n\n// MyPage\nimport { MyPageUser } from \"../LMS/MyPage/MyPageUser\";\n// import { MyPageLecture } from \"../LMS/MyPage/MyPageLecture\";\nimport { MyPageLectureModal } from \"../LMS/MyPage/MyPageLectureModal\";\nimport { MyPageUserDelete } from \"../LMS/MyPage/MyPageUserDelete\";\n\n// Blank Window 로 띄울 예정\n// Course\n// import { Course } from \"../LMS/Course/Course\";\n\n// Community\nimport { Notices } from \"../LMS/Community/Notices.js\";\nimport { QA } from \"../LMS/Community/QA.js\";\nimport { Events } from \"../LMS/Community/Events.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameBG = styled.div`\n    width: 100%;\n    height: 919px;\n    position: absolute;\n    top: 0;\n    background-image: url(\"/image/Gamebg.png\");\n    background-size: cover;\n    background-position: center;\n`;\n_c = GameBG;\nconst GameBox = styled.div`\n    position: relative;\n`;\n\n// 게임을 로드할 화면을 만듬\n_c2 = GameBox;\nconst Container = styled.div`\n    /* width: 1500px;\n    height: 800px;\n    margin: 80px auto;\n    border: 1px solid gray; */\n\n    position: absolute;\n    top: -17px;\n    width: 1656px;\n    margin-left: auto;\n    margin-right: auto;\n    height: 662px;\n    margin: 80px auto;\n    border: 1px solid gray;\n`;\n_c3 = Container;\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"1400px\",\n    // 모달의 너비를 설정합니다. (기존 width)\n    height: \"865px\",\n    // 모달의 높이를 설정합니다. (기존 height)\n    padding: \"20px\",\n    borderRadius: \"10px\"\n  },\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\" // 오버레이의 배경색을 설정합니다.\n  }\n};\nexport function UnityProject() {\n  _s();\n  let qaUrlResponse = \"\";\n  const playingGame = true;\n\n  //let playingGame = false;\n  // const [playingGame, setPlayingGame] = useState(false);\n\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [userName, setUserName] = useState();\n  const [score, setScore] = useState();\n  const [modalOpen, setModalOpen] = useState(false);\n  // const modalBackground = useRef();\n\n  const closeModal = qaUrl => {\n    if (!qaUrl) {\n      setModalOpen(false);\n    } else {\n      // window.alert(\"UnityProject ModalResponse Message: \" + qaUrl);\n      qaUrlResponse = qaUrl;\n    }\n  };\n  const [modalReturn, setModalReturn] = useState(null);\n\n  // React 에서 Unity 로 sendMessage 를 통해 전달하기\n  const {\n    unityProvider,\n    sendMessage,\n    addEventListener,\n    removeEventListener\n  } = useUnityContext({\n    loaderUrl: \"build/Build.loader.js\",\n    dataUrl: \"build/Build.data\",\n    frameworkUrl: \"build/Build.framework.js\",\n    codeUrl: \"build/Build.wasm\"\n  });\n\n  // Unity 에서 React 로 전달\n  function handleGameOver(userName, score) {\n    setIsGameOver(true);\n    setUserName(userName);\n    setScore(score);\n  }\n\n  // // Unity에서 호출될 JavaScript 함수\n  // function handleOpenReactWindow(romeName) {\n  //     // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n  //     // React 애플리케이션의 URL로 새로운 탭을 열기\n  //     window.open(\"http://localhost:3000/community/notices\", \"_blank\");\n  // }\n\n  useEffect(() => {\n    addEventListener(\"OpenReactWindow\", handleOpenReactWindow);\n    return () => {\n      removeEventListener(\"OpenReactWindow\", handleOpenReactWindow);\n    };\n  }, []);\n\n  // Unity에서 호출될 JavaScript 함수\n  function handleOpenReactWindow(romeName) {\n    // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n    // React 애플리케이션의 URL로 새로운 탭을 열기\n\n    setModalOpen(true);\n\n    // Test 작업 중\n    // if (romeName == \"공지사항\") {\n    //     // setModalReturn(() => LectureList); // React component function\n    //     setModalReturn(() => LectureListModal); // => 새로운 브라우저 창 열기\n    // }\n\n    // MyPage & 공지사항\n    if (romeName == \"회원정보\") {\n      setModalReturn(() => MyPageUser); // React component function\n    } else if (romeName == \"나의학습\") {\n      setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\n    } else if (romeName == \"회원탈퇴\") {\n      setModalReturn(() => MyPageUserDelete); // React component function\n    } else if (romeName == \"공지사항\") {\n      setModalReturn(() => Notices); // React component function\n    } else if (romeName == \"이벤트\") {\n      setModalReturn(() => Events); // React component function\n    } else if (romeName == \"질의응답\") {\n      setModalReturn(() => QA); // React component function\n    } else if (romeName == \"강의\") {\n      setModalReturn(() => LectureListModal); // => 새로운 브라우저 창 열기\n    } else if (romeName == \"장바구니\") {\n      setModalReturn(() => CartModal); // React component function\n    } else if (romeName == \"회원관리\") {\n      setModalReturn(() => UserManagement); // React component function\n    } else if (romeName == \"강의관리\") {\n      setModalReturn(() => LectureManagement); // React component function\n    } else if (romeName == \"수강관리\") {\n      setModalReturn(() => EnrollmentManagement); // React component function\n    } else if (romeName == \"로그아웃\") {\n      setModalReturn(() => {\n        window.location.href = \"http://localhost:3000/Login\";\n      }); // React component function\n    }\n  }\n\n  // Unity에서 호출될 JavaScript 함수\n  function handleOpenReactWindow_Origin(romeName) {\n    // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n    // React 애플리케이션의 URL로 새로운 탭을 열기\n    // setModalOpen(true);\n    // Admin\n    // if (romeName == \"회원관리\") {\n    //     setModalReturn(() => UserManagement); // React component function\n    // } else if (romeName == \"강의관리\") {\n    //     setModalReturn(() => LectureManagement); // React component function\n    // } else if (romeName == \"수강관리\") {\n    //     setModalReturn(() => EnrollmentManagement); // React component function\n    // }\n    // Lecture & Cart\n    // if (romeName == \"강의\") {\n    //     // setModalReturn(() => LectureList); // React component function\n    //     setModalReturn(() => LectureListModal); // => 새로운 브라우저 창 열기\n    // } else if (romeName == \"장바구니\") {\n    //     setModalReturn(() => Cart); // React component function\n    // }\n    // MyPage\n    // if (romeName == \"회원정보\") {\n    //     setModalReturn(() => MyPageUser); // React component function\n    // } else if (romeName == \"나의학습\") {\n    //     // setModalReturn(() => MyPageLecture); // React component function\n    //     setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\n    // } else if (romeName == \"회원탈퇴\") {\n    //     setModalReturn(() => MyPageUserDelete); // React component function\n    // }\n    // Community\n    // if (romeName == \"공지사항\") {\n    //     setModalReturn(() => Notices); // React component function\n    // } else if (romeName == \"이벤트\") {\n    //     setModalReturn(() => Events); // React component function\n    // } else if (romeName == \"질의응답\") {\n    //     setModalReturn(() => QA); // React component function\n    // }\n    // LectureDetail & Course Test\n    // if (romeName == \"이벤트\") {\n    //     setModalReturn(() => LectureDetail); // React component function\n    // } else if (romeName == \"QA\") {\n    //     setModalReturn(() => Course); // React component function\n    // }\n  }\n  useEffect(() => {\n    addEventListener(\"GameOver\", handleGameOver);\n    return () => {\n      removeEventListener(\"GameOver\", handleGameOver);\n    };\n  }, []);\n  function ReactToUnityJSON(urlLectureContentQA) {\n    // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/${lectureId}/${data.learningContentsSeq}`; // /{lectureId}/{learningContentsSeq}\n    // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/L00000000052/3`; // /{lectureId}/{learningContentsSeq}\n\n    // window.alert(\"urlLectureContentQA: \" + urlLectureContentQA);\n\n    axios.get(urlLectureContentQA, {\n      withCredentials: true\n    }).then(response => {\n      console.log(\"데이터:\", response.data);\n      window.alert(\"response.data: \" + response.data[0].question + \"@\" + response.data[1].question + \"@\" + response.data[2].question);\n      const jsonData = JSON.stringify(response.data);\n\n      // window.alert(\"React jsonData: \" + jsonData);\n\n      // Unity로 데이터 전송\n      // sendMessage(\"DataReceiverObject\", \"ReceiveJsonData\", jsonData);\n      // sendMessage(\"DataReceiver\", \"ReceiveJsonData\", jsonData);\n\n      // window.alert(\"SendMessage Start!!!\");\n\n      sendMessage(\"Canvas\", \"ReceiveJsonData\", jsonData);\n    }).catch(error => {\n      console.log(\"에러 발생: \", error);\n    });\n  }\n  function RequestFocus() {\n    // Focus 문제로 버그가 있어서, 이 부분을 제외할 경우 상단키를 입력하지 않으면, 플레이어 컨트롤이 안됨.\n    window.alert(\"계속 게임을 진행합니다.\");\n    ReactToUnityJSON(qaUrlResponse);\n    setModalOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GameBG, {\n      children: /*#__PURE__*/_jsxDEV(GameBox, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-container\"\n            // ref={modalBackground}\n            // onClick={(e) => {\n            //     // 모달 밖의 부분 클릭시 Close\n            //     if (e.target === modalBackground.current) {\n            //         setModalOpen(false);\n            //         sendMessage(\"PortalManager\", \"ContinueGame\");\n            //         RequestFocus();\n            //     }\n            //}}\n            ,\n            children: /*#__PURE__*/_jsxDEV(Modal, {\n              isOpen: modalOpen,\n              shouldCloseOnOverlayClick: false // 모달 바깥을 클릭해도 모달이 닫히지 않도록 설정\n              ,\n              onRequestClose: () => {\n                setModalOpen(false);\n              },\n              style: customStyles // 스타일을 적용합니다.\n              ,\n              contentLabel: \"Modal Window\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"close\"\n                /* 오른쪽 상단 x 클릭시 Close */,\n                onClick: () => {\n                  setModalOpen(false);\n                  sendMessage(\"PortalManager\", \"ContinueGame\");\n                  RequestFocus();\n                },\n                style: {\n                  cursor: \"pointer\",\n                  fontSize: \"1.5rem\",\n                  position: \"absolute\",\n                  top: \"10px\",\n                  right: \"10px\",\n                  color: \"white\" // 버튼 색상을 하얀색으로 설정\n                },\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 37\n              }, this), modalReturn && /*#__PURE__*/React.createElement(modalReturn, modalReturn === MyPageLectureModal ? {\n                onClose: closeModal\n              } : {}), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this), playingGame ? /*#__PURE__*/_jsxDEV(Unity, {\n            unityProvider: unityProvider,\n            style: {\n              width: \"100%\",\n              height: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, this), isGameOver === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Game Over ${userName}! You've scored ${score} points.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(UnityProject, \"29raPxXxYrVot4Rnk6wVuev60l0=\", false, function () {\n  return [useUnityContext];\n});\n_c4 = UnityProject;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GameBG\");\n$RefreshReg$(_c2, \"GameBox\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"UnityProject\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Unity","useUnityContext","styled","Modal","UserManagement","LectureManagement","EnrollmentManagement","LectureListModal","CartModal","MyPageUser","MyPageLectureModal","MyPageUserDelete","Notices","QA","Events","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GameBG","div","_c","GameBox","_c2","Container","_c3","customStyles","content","top","left","right","bottom","transform","width","height","padding","borderRadius","overlay","backgroundColor","UnityProject","_s","qaUrlResponse","playingGame","isGameOver","setIsGameOver","userName","setUserName","score","setScore","modalOpen","setModalOpen","closeModal","qaUrl","modalReturn","setModalReturn","unityProvider","sendMessage","addEventListener","removeEventListener","loaderUrl","dataUrl","frameworkUrl","codeUrl","handleGameOver","handleOpenReactWindow","romeName","window","location","href","handleOpenReactWindow_Origin","ReactToUnityJSON","urlLectureContentQA","get","withCredentials","then","response","console","log","data","alert","question","jsonData","JSON","stringify","catch","error","RequestFocus","children","className","isOpen","shouldCloseOnOverlayClick","onRequestClose","style","contentLabel","onClick","cursor","fontSize","position","color","fileName","_jsxFileName","lineNumber","columnNumber","createElement","onClose","_c4","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/lms_app/src/Components/Unity/UnityProject.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\nimport styled from \"styled-components\";\n\nimport Modal from \"react-modal\";\n\n// Admin\nimport { UserManagement } from \"../LMS/Admin/UserManagement\";\nimport { LectureManagement } from \"../LMS/Admin/LectureManagement\";\nimport { EnrollmentManagement } from \"../LMS/Admin/EnrollmentManagement\";\n\n// Lecture\n// import { LectureList } from \"../LMS/Lecture/LectureList\";\nimport { LectureListModal } from \"../LMS/Lecture/LectureListModal\";\n\n// Blank Window 로 띄울 예정\n// import { LectureDetail } from \"../LMS/Lecture/LectureDetail\";\n\n// Cart\nimport { CartModal } from \"../LMS/Cart/CartModal\";\n\n// MyPage\nimport { MyPageUser } from \"../LMS/MyPage/MyPageUser\";\n// import { MyPageLecture } from \"../LMS/MyPage/MyPageLecture\";\nimport { MyPageLectureModal } from \"../LMS/MyPage/MyPageLectureModal\";\nimport { MyPageUserDelete } from \"../LMS/MyPage/MyPageUserDelete\";\n\n// Blank Window 로 띄울 예정\n// Course\n// import { Course } from \"../LMS/Course/Course\";\n\n// Community\nimport { Notices } from \"../LMS/Community/Notices.js\";\nimport { QA } from \"../LMS/Community/QA.js\";\nimport { Events } from \"../LMS/Community/Events.js\";\n\nimport axios from \"axios\";\n\nconst GameBG = styled.div`\n    width: 100%;\n    height: 919px;\n    position: absolute;\n    top: 0;\n    background-image: url(\"/image/Gamebg.png\");\n    background-size: cover;\n    background-position: center;\n`;\nconst GameBox = styled.div`\n    position: relative;\n`;\n\n// 게임을 로드할 화면을 만듬\nconst Container = styled.div`\n    /* width: 1500px;\n    height: 800px;\n    margin: 80px auto;\n    border: 1px solid gray; */\n\n    position: absolute;\n    top: -17px;\n    width: 1656px;\n    margin-left: auto;\n    margin-right: auto;\n    height: 662px;\n    margin: 80px auto;\n    border: 1px solid gray;\n`;\n\nconst customStyles = {\n    content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"1400px\", // 모달의 너비를 설정합니다. (기존 width)\n        height: \"865px\", // 모달의 높이를 설정합니다. (기존 height)\n        padding: \"20px\",\n        borderRadius: \"10px\",\n    },\n    overlay: {\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\", // 오버레이의 배경색을 설정합니다.\n    },\n};\n\nexport function UnityProject() {\n    let qaUrlResponse = \"\";\n    const playingGame = true;\n\n    //let playingGame = false;\n    // const [playingGame, setPlayingGame] = useState(false);\n\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [userName, setUserName] = useState();\n    const [score, setScore] = useState();\n\n    const [modalOpen, setModalOpen] = useState(false);\n    // const modalBackground = useRef();\n\n    const closeModal = (qaUrl) => {\n        if (!qaUrl) {\n            setModalOpen(false);\n        } else {\n            // window.alert(\"UnityProject ModalResponse Message: \" + qaUrl);\n            qaUrlResponse = qaUrl;\n        }\n    };\n\n    const [modalReturn, setModalReturn] = useState(null);\n\n    // React 에서 Unity 로 sendMessage 를 통해 전달하기\n    const {\n        unityProvider,\n        sendMessage,\n        addEventListener,\n        removeEventListener,\n    } = useUnityContext({\n        loaderUrl: \"build/Build.loader.js\",\n        dataUrl: \"build/Build.data\",\n        frameworkUrl: \"build/Build.framework.js\",\n        codeUrl: \"build/Build.wasm\",\n    });\n\n    // Unity 에서 React 로 전달\n    function handleGameOver(userName, score) {\n        setIsGameOver(true);\n        setUserName(userName);\n        setScore(score);\n    }\n\n    // // Unity에서 호출될 JavaScript 함수\n    // function handleOpenReactWindow(romeName) {\n    //     // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n    //     // React 애플리케이션의 URL로 새로운 탭을 열기\n    //     window.open(\"http://localhost:3000/community/notices\", \"_blank\");\n    // }\n\n    useEffect(() => {\n        addEventListener(\"OpenReactWindow\", handleOpenReactWindow);\n        return () => {\n            removeEventListener(\"OpenReactWindow\", handleOpenReactWindow);\n        };\n    }, []);\n\n    // Unity에서 호출될 JavaScript 함수\n    function handleOpenReactWindow(romeName) {\n        // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n        // React 애플리케이션의 URL로 새로운 탭을 열기\n\n        setModalOpen(true);\n\n        // Test 작업 중\n        // if (romeName == \"공지사항\") {\n        //     // setModalReturn(() => LectureList); // React component function\n        //     setModalReturn(() => LectureListModal); // => 새로운 브라우저 창 열기\n        // }\n\n        // MyPage & 공지사항\n        if (romeName == \"회원정보\") {\n            setModalReturn(() => MyPageUser); // React component function\n        } else if (romeName == \"나의학습\") {\n            setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\n        } else if (romeName == \"회원탈퇴\") {\n            setModalReturn(() => MyPageUserDelete); // React component function\n        } else if (romeName == \"공지사항\") {\n            setModalReturn(() => Notices); // React component function\n        } else if (romeName == \"이벤트\") {\n            setModalReturn(() => Events); // React component function\n        } else if (romeName == \"질의응답\") {\n            setModalReturn(() => QA); // React component function\n        } else if (romeName == \"강의\") {\n            setModalReturn(() => LectureListModal); // => 새로운 브라우저 창 열기\n        } else if (romeName == \"장바구니\") {\n            setModalReturn(() => CartModal); // React component function\n        } else if (romeName == \"회원관리\") {\n            setModalReturn(() => UserManagement); // React component function\n        } else if (romeName == \"강의관리\") {\n            setModalReturn(() => LectureManagement); // React component function\n        } else if (romeName == \"수강관리\") {\n            setModalReturn(() => EnrollmentManagement); // React component function\n        } else if (romeName == \"로그아웃\") {\n            setModalReturn(() => {\n                window.location.href = \"http://localhost:3000/Login\";\n            }); // React component function\n        }\n    }\n\n    // Unity에서 호출될 JavaScript 함수\n    function handleOpenReactWindow_Origin(romeName) {\n        // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n        // React 애플리케이션의 URL로 새로운 탭을 열기\n        // setModalOpen(true);\n        // Admin\n        // if (romeName == \"회원관리\") {\n        //     setModalReturn(() => UserManagement); // React component function\n        // } else if (romeName == \"강의관리\") {\n        //     setModalReturn(() => LectureManagement); // React component function\n        // } else if (romeName == \"수강관리\") {\n        //     setModalReturn(() => EnrollmentManagement); // React component function\n        // }\n        // Lecture & Cart\n        // if (romeName == \"강의\") {\n        //     // setModalReturn(() => LectureList); // React component function\n        //     setModalReturn(() => LectureListModal); // => 새로운 브라우저 창 열기\n        // } else if (romeName == \"장바구니\") {\n        //     setModalReturn(() => Cart); // React component function\n        // }\n        // MyPage\n        // if (romeName == \"회원정보\") {\n        //     setModalReturn(() => MyPageUser); // React component function\n        // } else if (romeName == \"나의학습\") {\n        //     // setModalReturn(() => MyPageLecture); // React component function\n        //     setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\n        // } else if (romeName == \"회원탈퇴\") {\n        //     setModalReturn(() => MyPageUserDelete); // React component function\n        // }\n        // Community\n        // if (romeName == \"공지사항\") {\n        //     setModalReturn(() => Notices); // React component function\n        // } else if (romeName == \"이벤트\") {\n        //     setModalReturn(() => Events); // React component function\n        // } else if (romeName == \"질의응답\") {\n        //     setModalReturn(() => QA); // React component function\n        // }\n        // LectureDetail & Course Test\n        // if (romeName == \"이벤트\") {\n        //     setModalReturn(() => LectureDetail); // React component function\n        // } else if (romeName == \"QA\") {\n        //     setModalReturn(() => Course); // React component function\n        // }\n    }\n\n    useEffect(() => {\n        addEventListener(\"GameOver\", handleGameOver);\n        return () => {\n            removeEventListener(\"GameOver\", handleGameOver);\n        };\n    }, []);\n\n    function ReactToUnityJSON(urlLectureContentQA) {\n        // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/${lectureId}/${data.learningContentsSeq}`; // /{lectureId}/{learningContentsSeq}\n        // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/L00000000052/3`; // /{lectureId}/{learningContentsSeq}\n\n        // window.alert(\"urlLectureContentQA: \" + urlLectureContentQA);\n\n        axios\n            .get(urlLectureContentQA, {\n                withCredentials: true,\n            })\n            .then((response) => {\n                console.log(\"데이터:\", response.data);\n                window.alert(\n                    \"response.data: \" +\n                        response.data[0].question +\n                        \"@\" +\n                        response.data[1].question +\n                        \"@\" +\n                        response.data[2].question\n                );\n\n                const jsonData = JSON.stringify(response.data);\n\n                // window.alert(\"React jsonData: \" + jsonData);\n\n                // Unity로 데이터 전송\n                // sendMessage(\"DataReceiverObject\", \"ReceiveJsonData\", jsonData);\n                // sendMessage(\"DataReceiver\", \"ReceiveJsonData\", jsonData);\n\n                // window.alert(\"SendMessage Start!!!\");\n\n                sendMessage(\"Canvas\", \"ReceiveJsonData\", jsonData);\n            })\n            .catch((error) => {\n                console.log(\"에러 발생: \", error);\n            });\n    }\n\n    function RequestFocus() {\n        // Focus 문제로 버그가 있어서, 이 부분을 제외할 경우 상단키를 입력하지 않으면, 플레이어 컨트롤이 안됨.\n        window.alert(\"계속 게임을 진행합니다.\");\n        ReactToUnityJSON(qaUrlResponse);\n        setModalOpen(false);\n    }\n\n    return (\n        <>\n            <GameBG>\n                <GameBox>\n                    {/* <h1>UnityProject Game</h1> */}\n                    {/* <button onClick={() => {\n                playingGame = true;\n//                PlayingGame(true)\n            }}>Start Game</button> */}\n\n                    {/* // 버튼 테스트\n            <button onClick={() => sendMessage(\"PortalManager\", \"PauseGame\")}>\n                Pause Game\n            </button>\n            <button\n                onClick={() => sendMessage(\"PortalManager\", \"ContinueGame\")}\n            >\n                Continue Game\n            </button>\n            <button onClick={() => sendMessage(\"Player\", \"Attack\")}>\n                Attack\n            </button> */}\n                    {/* <button\n                onClick={() =>\n                    ReactToUnityJSON(\n                        \"http://localhost:8080/learning/contents/qa/L00000000052/3\"\n                    )\n                }\n            >\n                ReactToUnityJSON\n            </button> */}\n\n                    <Container>\n                        {/* <div className={\"btn-wrapper\"}>\n                    <button\n                        className={\"modal-open-btn\"}\n                        onClick={() => setModalOpen(true)}\n                    >\n                        모달 열기\n                    </button>\n                </div> */}\n                        {modalOpen && (\n                            <div\n                                className={\"modal-container\"}\n                                // ref={modalBackground}\n                                // onClick={(e) => {\n                                //     // 모달 밖의 부분 클릭시 Close\n                                //     if (e.target === modalBackground.current) {\n                                //         setModalOpen(false);\n                                //         sendMessage(\"PortalManager\", \"ContinueGame\");\n                                //         RequestFocus();\n                                //     }\n                                //}}\n                            >\n                                {/* <div className={\"modal-content\"}> */}\n                                <Modal\n                                    isOpen={modalOpen}\n                                    shouldCloseOnOverlayClick={false} // 모달 바깥을 클릭해도 모달이 닫히지 않도록 설정\n                                    onRequestClose={() => {\n                                        setModalOpen(false);\n                                    }}\n                                    style={customStyles} // 스타일을 적용합니다.\n                                    contentLabel=\"Modal Window\"\n                                >\n                                    <span\n                                        className=\"close\"\n                                        /* 오른쪽 상단 x 클릭시 Close */\n                                        onClick={() => {\n                                            setModalOpen(false);\n                                            sendMessage(\n                                                \"PortalManager\",\n                                                \"ContinueGame\"\n                                            );\n                                            RequestFocus();\n                                        }}\n                                        style={{\n                                            cursor: \"pointer\",\n                                            fontSize: \"1.5rem\",\n                                            position: \"absolute\",\n                                            top: \"10px\",\n                                            right: \"10px\",\n                                            color: \"white\", // 버튼 색상을 하얀색으로 설정\n                                        }}\n                                    >\n                                        &times;\n                                    </span>\n                                    {/* <h1>리액트로 모달</h1> */}\n                                    {modalReturn &&\n                                        React.createElement(\n                                            modalReturn,\n                                            modalReturn === MyPageLectureModal\n                                                ? { onClose: closeModal }\n                                                : {}\n                                        )}\n                                    {/* {modalReturn && React.createElement(modalReturn)} */}\n                                    <br></br>\n                                    {/* <button\n                                // [모달 닫기] 버튼 클릭시 Close\n                                onClick={() => {\n                                    setModalOpen(false);\n                                    sendMessage(\n                                        \"PortalManager\",\n                                        \"ContinueGame\"\n                                    );\n                                    RequestFocus();\n                                }}\n                            >\n                                모달 닫기\n                            </button> */}\n                                </Modal>\n                                {/* </div> */}\n                            </div>\n                        )}\n                        {playingGame ? (\n                            <Unity\n                                unityProvider={unityProvider}\n                                style={{\n                                    width: \"100%\",\n                                    height: \"100%\",\n                                }}\n                            />\n                        ) : null}\n                    </Container>\n                </GameBox>\n            </GameBG>\n\n            {/* // Unity 에서 게임오버 메시지를 받으면 출력후 종료 */}\n            {isGameOver === true && (\n                <p>{`Game Over ${userName}! You've scored ${score} points.`}</p>\n            )}\n        </>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}