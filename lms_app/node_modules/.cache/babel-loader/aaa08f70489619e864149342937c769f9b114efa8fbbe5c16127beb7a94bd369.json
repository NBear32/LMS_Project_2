{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\lms_app\\\\src\\\\Components\\\\Unity\\\\UnityProject.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\n\n// Admin\nimport { UserManagement } from \"../LMS/Admin/UserManagement\";\nimport { LectureManagement } from \"../LMS/Admin/LectureManagement\";\nimport { EnrollmentManagement } from \"../LMS/Admin/EnrollmentManagement\";\n\n// Lecture\n// import { LectureList } from \"../LMS/Lecture/LectureList\";\nimport { LectureListModal } from \"../LMS/Lecture/LectureListModal\";\n\n// Blank Window 로 띄울 예정\n// import { LectureDetail } from \"../LMS/Lecture/LectureDetail\";\n\n// Cart\nimport { Cart } from \"../LMS/Cart/Cart\";\n\n// MyPage\nimport { MyPageUser } from \"../LMS/MyPage/MyPageUser\";\n// import { MyPageLecture } from \"../LMS/MyPage/MyPageLecture\";\nimport { MyPageLectureModal } from \"../LMS/MyPage/MyPageLectureModal\";\nimport { MyPageUserDelete } from \"../LMS/MyPage/MyPageUserDelete\";\n\n// Blank Window 로 띄울 예정\n// Course\n// import { Course } from \"../LMS/Course/Course\";\n\n// Community\nimport { Notices } from \"../LMS/Community/Notices.js\";\nimport { QA } from \"../LMS/Community/QA.js\";\nimport { Events } from \"../LMS/Community/Events.js\";\nimport axios from \"axios\";\n\n// 게임을 로드할 화면을 만듬\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    width: 1500px;\n    height: 800px;\n    margin: auto;\n    border: 1px solid gray;\n`;\n_c = Container;\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"1400px\",\n    // 모달의 너비를 설정합니다. (기존 width)\n    height: \"865px\",\n    // 모달의 높이를 설정합니다. (기존 height)\n    padding: \"20px\",\n    borderRadius: \"10px\"\n  },\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\" // 오버레이의 배경색을 설정합니다.\n  }\n};\nmergeInto(LibraryManager.library, {\n  MyJSFunction: function (message) {\n    console.log(UTF8ToString(message));\n  }\n});\nexport function UnityProject() {\n  _s();\n  const playingGame = true;\n\n  //let playingGame = false;\n  // const [playingGame, setPlayingGame] = useState(false);\n\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [userName, setUserName] = useState();\n  const [score, setScore] = useState();\n  const [modalOpen, setModalOpen] = useState(false);\n  // const modalBackground = useRef();\n\n  const [modalReturn, setModalReturn] = useState(null);\n\n  // React 에서 Unity 로 sendMessage 를 통해 전달하기\n  const {\n    unityProvider,\n    sendMessage,\n    addEventListener,\n    removeEventListener\n  } = useUnityContext({\n    loaderUrl: \"build/Build.loader.js\",\n    dataUrl: \"build/Build.data\",\n    frameworkUrl: \"build/Build.framework.js\",\n    codeUrl: \"build/Build.wasm\"\n  });\n\n  // Unity 에서 React 로 전달\n  function handleGameOver(userName, score) {\n    setIsGameOver(true);\n    setUserName(userName);\n    setScore(score);\n  }\n\n  // // Unity에서 호출될 JavaScript 함수\n  // function handleOpenReactWindow(romeName) {\n  //     // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n  //     // React 애플리케이션의 URL로 새로운 탭을 열기\n  //     window.open(\"http://localhost:3000/community/notices\", \"_blank\");\n  // }\n\n  useEffect(() => {\n    addEventListener(\"OpenReactWindow\", handleOpenReactWindow);\n    return () => {\n      removeEventListener(\"OpenReactWindow\", handleOpenReactWindow);\n    };\n  }, []);\n\n  // Unity에서 호출될 JavaScript 함수\n  function handleOpenReactWindow(romeName) {\n    // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n    // React 애플리케이션의 URL로 새로운 탭을 열기\n\n    setModalOpen(true);\n\n    // Test LectureListModal & MyPageLectureModal\n    if (romeName == \"공지사항\") {\n      // setModalReturn(() => LectureList); // React component function\n      setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\n    } else if (romeName == \"이벤트\") {\n      setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\n    }\n  }\n\n  // Unity에서 호출될 JavaScript 함수\n  function handleOpenReactWindow_Origin(romeName) {\n    // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n    // React 애플리케이션의 URL로 새로운 탭을 열기\n\n    setModalOpen(true);\n\n    // Test LectureListModal & MyPageLectureModal\n    if (romeName == \"공지사항\") {\n      // setModalReturn(() => LectureList); // React component function\n      setModalReturn(() => LectureListModal); // => 새로운 브라우저 창 열기\n    } else if (romeName == \"이벤트\") {\n      setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\n    }\n\n    // Admin\n    if (romeName == \"공지사항\") {\n      setModalReturn(() => UserManagement); // React component function\n    } else if (romeName == \"이벤트\") {\n      setModalReturn(() => LectureManagement); // React component function\n    } else if (romeName == \"QA\") {\n      setModalReturn(() => EnrollmentManagement); // React component function\n    }\n\n    // Lecture & Cart\n    if (romeName == \"공지사항\") {\n      // setModalReturn(() => LectureList); // React component function\n      setModalReturn(() => LectureListModal); // => 새로운 브라우저 창 열기\n    } else if (romeName == \"이벤트\") {\n      setModalReturn(() => Cart); // React component function\n    }\n\n    // LectureDetail & Course\n    // if (romeName == \"이벤트\") {\n    //     setModalReturn(() => LectureDetail); // React component function\n    // } else if (romeName == \"QA\") {\n    //     setModalReturn(() => Course); // React component function\n    // }\n\n    // MyPage\n    if (romeName == \"공지사항\") {\n      setModalReturn(() => MyPageUser); // React component function\n    } else if (romeName == \"이벤트\") {\n      // setModalReturn(() => MyPageLecture); // React component function\n      setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\n    } else if (romeName == \"QA\") {\n      setModalReturn(() => MyPageUserDelete); // React component function\n    }\n\n    // Community\n    if (romeName == \"공지사항\") {\n      setModalReturn(() => Notices); // React component function\n    } else if (romeName == \"이벤트\") {\n      setModalReturn(() => Events); // React component function\n    } else if (romeName == \"QA\") {\n      setModalReturn(() => QA); // React component function\n    }\n  }\n  useEffect(() => {\n    addEventListener(\"GameOver\", handleGameOver);\n    return () => {\n      removeEventListener(\"GameOver\", handleGameOver);\n    };\n  }, []);\n  function ReactToUnityJSON() {\n    // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/${lectureId}/${data.learningContentsSeq}`; // /{lectureId}/{learningContentsSeq}\n    const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/L00000000052/3`; // /{lectureId}/{learningContentsSeq}\n\n    window.alert(\"urlLectureContentQA: \" + urlLectureContentQA);\n    axios.get(urlLectureContentQA, {\n      withCredentials: true\n    }).then(response => {\n      console.log(\"데이터:\", response.data);\n      window.alert(\"response.data: \" + response.data[0].question + \"@\" + response.data[1].question + \"@\" + response.data[2].question);\n      const jsonData = JSON.stringify(response.data);\n      window.alert(\"React jsonData: \" + jsonData);\n\n      // Unity로 데이터 전송\n      // sendMessage(\"DataReceiverObject\", \"ReceiveJsonData\", jsonData);\n      // sendMessage(\"DataReceiver\", \"ReceiveJsonData\", jsonData);\n\n      window.alert(\"SendMessage Start!!!\");\n      sendMessage(\"Canvas\", \"ReceiveJsonData\", jsonData);\n    }).catch(error => {\n      console.log(\"에러 발생: \", error);\n    });\n  }\n  function RequestFocus() {\n    // Focus 문제로 버그가 있어서, 이 부분을 제외할 경우 상단키를 입력하지 않으면, 플레이어 컨트롤이 안됨.\n    window.alert(\"계속 게임을 진행합니다.\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\"\n        // ref={modalBackground}\n        // onClick={(e) => {\n        //     // 모달 밖의 부분 클릭시 Close\n        //     if (e.target === modalBackground.current) {\n        //         setModalOpen(false);\n        //         sendMessage(\"PortalManager\", \"ContinueGame\");\n        //         RequestFocus();\n        //     }\n        //}}\n        ,\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modalOpen,\n          onRequestClose: () => {\n            setModalOpen(false);\n          },\n          style: customStyles // 스타일을 적용합니다.\n          ,\n          contentLabel: \"Modal Test\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\"\n            /* 오른쪽 상단 x 클릭시 Close */,\n            onClick: () => {\n              setModalOpen(false);\n              sendMessage(\"PortalManager\", \"ContinueGame\");\n              RequestFocus();\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this), modalReturn && /*#__PURE__*/React.createElement(modalReturn), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this), playingGame ? /*#__PURE__*/_jsxDEV(Unity, {\n        unityProvider: unityProvider,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), isGameOver === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Game Over ${userName}! You've scored ${score} points.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(UnityProject, \"dxGlfIl/UP1gPcsfS+UkfePzqxg=\", false, function () {\n  return [useUnityContext];\n});\n_c2 = UnityProject;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"UnityProject\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Unity","useUnityContext","styled","Modal","UserManagement","LectureManagement","EnrollmentManagement","LectureListModal","Cart","MyPageUser","MyPageLectureModal","MyPageUserDelete","Notices","QA","Events","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","customStyles","content","top","left","right","bottom","transform","width","height","padding","borderRadius","overlay","backgroundColor","mergeInto","LibraryManager","library","MyJSFunction","message","console","log","UTF8ToString","UnityProject","_s","playingGame","isGameOver","setIsGameOver","userName","setUserName","score","setScore","modalOpen","setModalOpen","modalReturn","setModalReturn","unityProvider","sendMessage","addEventListener","removeEventListener","loaderUrl","dataUrl","frameworkUrl","codeUrl","handleGameOver","handleOpenReactWindow","romeName","handleOpenReactWindow_Origin","ReactToUnityJSON","urlLectureContentQA","window","alert","get","withCredentials","then","response","data","question","jsonData","JSON","stringify","catch","error","RequestFocus","children","className","isOpen","onRequestClose","style","contentLabel","onClick","fileName","_jsxFileName","lineNumber","columnNumber","createElement","_c2","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/lms_app/src/Components/Unity/UnityProject.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Modal from \"react-modal\";\r\n\r\n// Admin\r\nimport { UserManagement } from \"../LMS/Admin/UserManagement\";\r\nimport { LectureManagement } from \"../LMS/Admin/LectureManagement\";\r\nimport { EnrollmentManagement } from \"../LMS/Admin/EnrollmentManagement\";\r\n\r\n// Lecture\r\n// import { LectureList } from \"../LMS/Lecture/LectureList\";\r\nimport { LectureListModal } from \"../LMS/Lecture/LectureListModal\";\r\n\r\n// Blank Window 로 띄울 예정\r\n// import { LectureDetail } from \"../LMS/Lecture/LectureDetail\";\r\n\r\n// Cart\r\nimport { Cart } from \"../LMS/Cart/Cart\";\r\n\r\n// MyPage\r\nimport { MyPageUser } from \"../LMS/MyPage/MyPageUser\";\r\n// import { MyPageLecture } from \"../LMS/MyPage/MyPageLecture\";\r\nimport { MyPageLectureModal } from \"../LMS/MyPage/MyPageLectureModal\";\r\nimport { MyPageUserDelete } from \"../LMS/MyPage/MyPageUserDelete\";\r\n\r\n// Blank Window 로 띄울 예정\r\n// Course\r\n// import { Course } from \"../LMS/Course/Course\";\r\n\r\n// Community\r\nimport { Notices } from \"../LMS/Community/Notices.js\";\r\nimport { QA } from \"../LMS/Community/QA.js\";\r\nimport { Events } from \"../LMS/Community/Events.js\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// 게임을 로드할 화면을 만듬\r\nconst Container = styled.div`\r\n    width: 1500px;\r\n    height: 800px;\r\n    margin: auto;\r\n    border: 1px solid gray;\r\n`;\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        width: \"1400px\", // 모달의 너비를 설정합니다. (기존 width)\r\n        height: \"865px\", // 모달의 높이를 설정합니다. (기존 height)\r\n        padding: \"20px\",\r\n        borderRadius: \"10px\",\r\n    },\r\n    overlay: {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\", // 오버레이의 배경색을 설정합니다.\r\n    },\r\n};\r\n\r\nmergeInto(LibraryManager.library, {\r\n    MyJSFunction: function(message) {\r\n        console.log(UTF8ToString(message));\r\n    }\r\n});\r\n\r\nexport function UnityProject() {\r\n    const playingGame = true;\r\n\r\n    //let playingGame = false;\r\n    // const [playingGame, setPlayingGame] = useState(false);\r\n\r\n    const [isGameOver, setIsGameOver] = useState(false);\r\n    const [userName, setUserName] = useState();\r\n    const [score, setScore] = useState();\r\n\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    // const modalBackground = useRef();\r\n\r\n    const [modalReturn, setModalReturn] = useState(null);\r\n\r\n    // React 에서 Unity 로 sendMessage 를 통해 전달하기\r\n    const {\r\n        unityProvider,\r\n        sendMessage,\r\n        addEventListener,\r\n        removeEventListener,\r\n    } = useUnityContext({\r\n        loaderUrl: \"build/Build.loader.js\",\r\n        dataUrl: \"build/Build.data\",\r\n        frameworkUrl: \"build/Build.framework.js\",\r\n        codeUrl: \"build/Build.wasm\",\r\n    });\r\n\r\n    // Unity 에서 React 로 전달\r\n    function handleGameOver(userName, score) {\r\n        setIsGameOver(true);\r\n        setUserName(userName);\r\n        setScore(score);\r\n    }\r\n\r\n    // // Unity에서 호출될 JavaScript 함수\r\n    // function handleOpenReactWindow(romeName) {\r\n    //     // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\r\n    //     // React 애플리케이션의 URL로 새로운 탭을 열기\r\n    //     window.open(\"http://localhost:3000/community/notices\", \"_blank\");\r\n    // }\r\n\r\n    useEffect(() => {\r\n        addEventListener(\"OpenReactWindow\", handleOpenReactWindow);\r\n        return () => {\r\n            removeEventListener(\"OpenReactWindow\", handleOpenReactWindow);\r\n        };\r\n    }, []);\r\n\r\n    // Unity에서 호출될 JavaScript 함수\r\n    function handleOpenReactWindow(romeName) {\r\n        // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\r\n        // React 애플리케이션의 URL로 새로운 탭을 열기\r\n\r\n        setModalOpen(true);\r\n\r\n        // Test LectureListModal & MyPageLectureModal\r\n        if (romeName == \"공지사항\") {\r\n            // setModalReturn(() => LectureList); // React component function\r\n            setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\r\n        } else if (romeName == \"이벤트\") {\r\n            setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\r\n        }\r\n    }\r\n\r\n    // Unity에서 호출될 JavaScript 함수\r\n    function handleOpenReactWindow_Origin(romeName) {\r\n        // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\r\n        // React 애플리케이션의 URL로 새로운 탭을 열기\r\n\r\n        setModalOpen(true);\r\n\r\n        // Test LectureListModal & MyPageLectureModal\r\n        if (romeName == \"공지사항\") {\r\n            // setModalReturn(() => LectureList); // React component function\r\n            setModalReturn(() => LectureListModal); // => 새로운 브라우저 창 열기\r\n        } else if (romeName == \"이벤트\") {\r\n            setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\r\n        }\r\n\r\n        // Admin\r\n        if (romeName == \"공지사항\") {\r\n            setModalReturn(() => UserManagement); // React component function\r\n        } else if (romeName == \"이벤트\") {\r\n            setModalReturn(() => LectureManagement); // React component function\r\n        } else if (romeName == \"QA\") {\r\n            setModalReturn(() => EnrollmentManagement); // React component function\r\n        }\r\n\r\n        // Lecture & Cart\r\n        if (romeName == \"공지사항\") {\r\n            // setModalReturn(() => LectureList); // React component function\r\n            setModalReturn(() => LectureListModal); // => 새로운 브라우저 창 열기\r\n        } else if (romeName == \"이벤트\") {\r\n            setModalReturn(() => Cart); // React component function\r\n        }\r\n\r\n        // LectureDetail & Course\r\n        // if (romeName == \"이벤트\") {\r\n        //     setModalReturn(() => LectureDetail); // React component function\r\n        // } else if (romeName == \"QA\") {\r\n        //     setModalReturn(() => Course); // React component function\r\n        // }\r\n\r\n        // MyPage\r\n        if (romeName == \"공지사항\") {\r\n            setModalReturn(() => MyPageUser); // React component function\r\n        } else if (romeName == \"이벤트\") {\r\n            // setModalReturn(() => MyPageLecture); // React component function\r\n            setModalReturn(() => MyPageLectureModal); // => 새로운 브라우저 창 열기\r\n        } else if (romeName == \"QA\") {\r\n            setModalReturn(() => MyPageUserDelete); // React component function\r\n        }\r\n\r\n        // Community\r\n        if (romeName == \"공지사항\") {\r\n            setModalReturn(() => Notices); // React component function\r\n        } else if (romeName == \"이벤트\") {\r\n            setModalReturn(() => Events); // React component function\r\n        } else if (romeName == \"QA\") {\r\n            setModalReturn(() => QA); // React component function\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        addEventListener(\"GameOver\", handleGameOver);\r\n        return () => {\r\n            removeEventListener(\"GameOver\", handleGameOver);\r\n        };\r\n    }, []);\r\n\r\n    function ReactToUnityJSON() {\r\n        // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/${lectureId}/${data.learningContentsSeq}`; // /{lectureId}/{learningContentsSeq}\r\n        const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/L00000000052/3`; // /{lectureId}/{learningContentsSeq}\r\n\r\n        window.alert(\"urlLectureContentQA: \" + urlLectureContentQA);\r\n\r\n        axios\r\n            .get(urlLectureContentQA, {\r\n                withCredentials: true,\r\n            })\r\n            .then((response) => {\r\n                console.log(\"데이터:\", response.data);\r\n                window.alert(\r\n                    \"response.data: \" +\r\n                        response.data[0].question +\r\n                        \"@\" +\r\n                        response.data[1].question +\r\n                        \"@\" +\r\n                        response.data[2].question\r\n                );\r\n\r\n                const jsonData = JSON.stringify(response.data);\r\n\r\n                window.alert(\"React jsonData: \" + jsonData);\r\n\r\n                // Unity로 데이터 전송\r\n                // sendMessage(\"DataReceiverObject\", \"ReceiveJsonData\", jsonData);\r\n                // sendMessage(\"DataReceiver\", \"ReceiveJsonData\", jsonData);\r\n\r\n                window.alert(\"SendMessage Start!!!\");\r\n\r\n                sendMessage(\"Canvas\", \"ReceiveJsonData\", jsonData);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"에러 발생: \", error);\r\n            });\r\n    }\r\n\r\n    function RequestFocus() {\r\n        // Focus 문제로 버그가 있어서, 이 부분을 제외할 경우 상단키를 입력하지 않으면, 플레이어 컨트롤이 안됨.\r\n        window.alert(\"계속 게임을 진행합니다.\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <h1>UnityProject Game</h1> */}\r\n            {/* <button onClick={() => {\r\n                playingGame = true;\r\n//                PlayingGame(true)\r\n            }}>Start Game</button> */}\r\n\r\n            {/* // 버튼 테스트\r\n            <button onClick={() => sendMessage(\"PortalManager\", \"PauseGame\")}>\r\n                Pause Game\r\n            </button>\r\n            <button\r\n                onClick={() => sendMessage(\"PortalManager\", \"ContinueGame\")}\r\n            >\r\n                Continue Game\r\n            </button>\r\n            <button onClick={() => sendMessage(\"Player\", \"Attack\")}>\r\n                Attack\r\n            </button>\r\n            <button onClick={() => ReactToUnityJSON()}>ReactToUnityJSON</button> */}\r\n\r\n            <Container>\r\n                {/* <div className={\"btn-wrapper\"}>\r\n                    <button\r\n                        className={\"modal-open-btn\"}\r\n                        onClick={() => setModalOpen(true)}\r\n                    >\r\n                        모달 열기\r\n                    </button>\r\n                </div> */}\r\n                {modalOpen && (\r\n                    <div\r\n                        className={\"modal-container\"}\r\n                        // ref={modalBackground}\r\n                        // onClick={(e) => {\r\n                        //     // 모달 밖의 부분 클릭시 Close\r\n                        //     if (e.target === modalBackground.current) {\r\n                        //         setModalOpen(false);\r\n                        //         sendMessage(\"PortalManager\", \"ContinueGame\");\r\n                        //         RequestFocus();\r\n                        //     }\r\n                        //}}\r\n                    >\r\n                        {/* <div className={\"modal-content\"}> */}\r\n                        <Modal\r\n                            isOpen={modalOpen}\r\n                            onRequestClose={() => {\r\n                                setModalOpen(false);\r\n                            }}\r\n                            style={customStyles} // 스타일을 적용합니다.\r\n                            contentLabel=\"Modal Test\"\r\n                        >\r\n                            <span\r\n                                className=\"close\"\r\n                                /* 오른쪽 상단 x 클릭시 Close */\r\n                                onClick={() => {\r\n                                    setModalOpen(false);\r\n                                    sendMessage(\r\n                                        \"PortalManager\",\r\n                                        \"ContinueGame\"\r\n                                    );\r\n                                    RequestFocus();\r\n                                }}\r\n                            >\r\n                                &times;\r\n                            </span>\r\n                            {/* <h1>리액트로 모달</h1> */}\r\n                            {modalReturn && React.createElement(modalReturn)}\r\n                            <br></br>\r\n                            {/* <button\r\n                                // [모달 닫기] 버튼 클릭시 Close\r\n                                onClick={() => {\r\n                                    setModalOpen(false);\r\n                                    sendMessage(\r\n                                        \"PortalManager\",\r\n                                        \"ContinueGame\"\r\n                                    );\r\n                                    RequestFocus();\r\n                                }}\r\n                            >\r\n                                모달 닫기\r\n                            </button> */}\r\n                        </Modal>\r\n                        {/* </div> */}\r\n                    </div>\r\n                )}\r\n                {playingGame ? (\r\n                    <Unity\r\n                        unityProvider={unityProvider}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                        }}\r\n                    />\r\n                ) : null}\r\n            </Container>\r\n\r\n            {/* // Unity 에서 게임오버 메시지를 받으면 출력후 종료 */}\r\n            {isGameOver === true && (\r\n                <p>{`Game Over ${userName}! You've scored ${score} points.`}</p>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}